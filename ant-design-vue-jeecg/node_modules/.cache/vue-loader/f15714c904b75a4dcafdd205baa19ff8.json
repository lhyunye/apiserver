{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DepartAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DepartAuthModal.vue","mtime":1618453705005},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\nimport DepartDataruleModal from './DepartDataruleModal'\n\nexport default {\n  name: 'DepartAuthModal',\n  components: { DepartDataruleModal },\n  data(){\n    return {\n      departId:\"\",\n      treeData: [],\n      defaultCheckedKeys:[],\n      checkedKeys:[],\n      halfCheckedKeys:[],\n      expandedKeysss:[],\n      allTreeKeys:[],\n      autoExpandParent: true,\n      checkStrictly: false,\n      title:\"部门权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys:[]\n    }\n  },\n  methods: {\n    onTreeNodeSelect(id){\n      if(id && id.length>0){\n        this.selectedKeys = id\n      }\n      this.$refs.datarule.show(this.selectedKeys[0],this.departId)\n    },\n    onCheck (checkedKeys, { halfCheckedKeys }) {\n      // 保存选中的和半选中的，后面保存的时候合并提交\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = halfCheckedKeys\n    },\n    show(departId){\n      this.departId=departId\n      this.loadData();\n    },\n    close () {\n      this.reset()\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand(expandedKeys){\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false\n    },\n    reset () {\n      this.expandedKeysss = []\n      this.checkedKeys = []\n      this.defaultCheckedKeys = []\n      this.loading = false\n    },\n    expandAll () {\n      this.expandedKeysss = this.allTreeKeys\n    },\n    closeAll () {\n      this.expandedKeysss = []\n    },\n    checkALL () {\n      this.checkedKeys = this.allTreeKeys\n    },\n    cancelCheckALL () {\n      this.checkedKeys = []\n    },\n    handleCancel () {\n      this.close()\n    },\n    handleSubmit() {\n      let that = this;\n      if(!that.departId){\n        this.$message.warning('请点击选择一个部门!')\n      }\n      let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\n      const permissionIds = checkedKeys.join(\",\")\n      let params =  {\n        departId:that.departId,\n        permissionIds,\n        lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n      };\n      that.loading = true;\n      saveDepartPermission(params).then((res)=>{\n        if(res.success){\n          that.$message.success(res.message);\n          that.loading = false;\n          that.loadData();\n        }else {\n          that.$message.error(res.message);\n          that.loading = false;\n        }\n      })\n    },\n    convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n      for(const {key, isLeaf, children} of treeList) {\n        keyLeafPair.push({key, isLeaf})\n        if(children && children.length > 0) {\n          this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n        }\n      }\n      return keyLeafPair;\n    },\n    emptyCurrForm() {\n      this.form.resetFields()\n    },\n    loadData(){\n      queryTreeListForRole().then((res) => {\n        this.treeData = res.result.treeList\n        this.allTreeKeys = res.result.ids\n        const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\n        queryDepartPermission({departId:this.departId}).then((res)=>{\n          // 过滤出 leaf node 即可，即选中的\n          // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n          // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n          const checkedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && keyLeafPair.isLeaf\n          })\n          const halfCheckedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && !keyLeafPair.isLeaf\n          })\n          this.checkedKeys = [...checkedKeys];\n          this.halfCheckedKeys = [...halfCheckedKeys]\n          this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\n          this.expandedKeysss = this.allTreeKeys;\n        })\n      })\n    }\n  },\n}\n",{"version":3,"sources":["DepartAuthModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DepartAuthModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <template v-if=\"this.departId\">\r\n      <a-form>\r\n        <a-form-item label='所拥有的权限'>\r\n          <a-tree\r\n            checkable\r\n            @check=\"onCheck\"\r\n            :checkedKeys=\"checkedKeys\"\r\n            :treeData=\"treeData\"\r\n            @expand=\"onExpand\"\r\n            @select=\"onTreeNodeSelect\"\r\n            :selectedKeys=\"selectedKeys\"\r\n            :expandedKeys=\"expandedKeysss\"\r\n            :checkStrictly=\"checkStrictly\"\r\n            style=\"height:500px;overflow: auto;\">\r\n            <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\r\n              {{ slotTitle }}\r\n              <a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\r\n            </span>\r\n          </a-tree>\r\n        </a-form-item>\r\n      </a-form>\r\n      <div class=\"anty-form-btn\">\r\n        <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\r\n          <a-menu slot=\"overlay\">\r\n            <!-- 简化Tree逻辑，使用默认checkStrictly为false的行为，即默认父子关联\r\n            <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\r\n            <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\r\n            -->\r\n            <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\r\n            <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\r\n            <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\r\n            <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\r\n          </a-menu>\r\n          <a-button>\r\n            树操作 <a-icon type=\"up\" />\r\n          </a-button>\r\n        </a-dropdown>\r\n        <a-button style=\"float: right\" @click=\"handleSubmit\" type=\"primary\" htmlType=\"button\" icon=\"form\">保存</a-button>\r\n      </div>\r\n    </template>\r\n    <div v-else style=\"height:330px;\"><h3>请先选择一个部门!</h3></div>\r\n    <depart-datarule-modal ref=\"datarule\"/>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\r\n  import DepartDataruleModal from './DepartDataruleModal'\r\n\r\n  export default {\r\n    name: 'DepartAuthModal',\r\n    components: { DepartDataruleModal },\r\n    data(){\r\n      return {\r\n        departId:\"\",\r\n        treeData: [],\r\n        defaultCheckedKeys:[],\r\n        checkedKeys:[],\r\n        halfCheckedKeys:[],\r\n        expandedKeysss:[],\r\n        allTreeKeys:[],\r\n        autoExpandParent: true,\r\n        checkStrictly: false,\r\n        title:\"部门权限配置\",\r\n        visible: false,\r\n        loading: false,\r\n        selectedKeys:[]\r\n      }\r\n    },\r\n    methods: {\r\n      onTreeNodeSelect(id){\r\n        if(id && id.length>0){\r\n          this.selectedKeys = id\r\n        }\r\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId)\r\n      },\r\n      onCheck (checkedKeys, { halfCheckedKeys }) {\r\n        // 保存选中的和半选中的，后面保存的时候合并提交\r\n        this.checkedKeys = checkedKeys\r\n        this.halfCheckedKeys = halfCheckedKeys\r\n      },\r\n      show(departId){\r\n        this.departId=departId\r\n        this.loadData();\r\n      },\r\n      close () {\r\n        this.reset()\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      onExpand(expandedKeys){\r\n        this.expandedKeysss = expandedKeys;\r\n        this.autoExpandParent = false\r\n      },\r\n      reset () {\r\n        this.expandedKeysss = []\r\n        this.checkedKeys = []\r\n        this.defaultCheckedKeys = []\r\n        this.loading = false\r\n      },\r\n      expandAll () {\r\n        this.expandedKeysss = this.allTreeKeys\r\n      },\r\n      closeAll () {\r\n        this.expandedKeysss = []\r\n      },\r\n      checkALL () {\r\n        this.checkedKeys = this.allTreeKeys\r\n      },\r\n      cancelCheckALL () {\r\n        this.checkedKeys = []\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      handleSubmit() {\r\n        let that = this;\r\n        if(!that.departId){\r\n          this.$message.warning('请点击选择一个部门!')\r\n        }\r\n        let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\r\n        const permissionIds = checkedKeys.join(\",\")\r\n        let params =  {\r\n          departId:that.departId,\r\n          permissionIds,\r\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\r\n        };\r\n        that.loading = true;\r\n        saveDepartPermission(params).then((res)=>{\r\n          if(res.success){\r\n            that.$message.success(res.message);\r\n            that.loading = false;\r\n            that.loadData();\r\n          }else {\r\n            that.$message.error(res.message);\r\n            that.loading = false;\r\n          }\r\n        })\r\n      },\r\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\r\n        for(const {key, isLeaf, children} of treeList) {\r\n          keyLeafPair.push({key, isLeaf})\r\n          if(children && children.length > 0) {\r\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\r\n          }\r\n        }\r\n        return keyLeafPair;\r\n      },\r\n      emptyCurrForm() {\r\n        this.form.resetFields()\r\n      },\r\n      loadData(){\r\n        queryTreeListForRole().then((res) => {\r\n          this.treeData = res.result.treeList\r\n          this.allTreeKeys = res.result.ids\r\n          const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\r\n          queryDepartPermission({departId:this.departId}).then((res)=>{\r\n            // 过滤出 leaf node 即可，即选中的\r\n            // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\r\n            // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\r\n            const checkedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && keyLeafPair.isLeaf\r\n            })\r\n            const halfCheckedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && !keyLeafPair.isLeaf\r\n            })\r\n            this.checkedKeys = [...checkedKeys];\r\n            this.halfCheckedKeys = [...halfCheckedKeys]\r\n            this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\r\n            this.expandedKeysss = this.allTreeKeys;\r\n          })\r\n        })\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}