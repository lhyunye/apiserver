{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1618453705013},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { httpAction } from '@/api/manage'\nimport { duplicateCheck } from '@/api/api'\nimport JDictSelectTag from '@/components/dict/JDictSelectTag'\n\nlet validatorCodeTimer = null\n\nexport default {\n  name: 'SysPositionModal',\n  components: { JDictSelectTag },\n  data() {\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        code: {\n          rules: [\n            { required: true, message: '请输入职务编码' },\n            {\n              validator: (rule, value, callback) => {\n                // 函数消抖的简单实现，防止一段时间内发送多次请求\n                if (validatorCodeTimer) {\n                  // 停止上次开启的定时器\n                  clearTimeout(validatorCodeTimer)\n                }\n                validatorCodeTimer = setTimeout(() => {\n                  duplicateCheck({\n                    tableName: 'sys_position',\n                    fieldName: 'code',\n                    fieldVal: value,\n                    dataId: this.model.id\n                  }).then((res) => {\n                    if (res.success) {\n                      callback()\n                    } else {\n                      callback(res.message)\n                    }\n                  }).catch(console.error)\n                }, 300)\n              }\n            }\n          ]\n        },\n        name: { rules: [{ required: true, message: '请输入职务名称' }] },\n        postRank: { rules: [{ required: true, message: '请选择职级' }] },\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit',\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,\n          'code',\n          'name',\n          'postRank',\n          // 'companyId'\n        ))\n      })\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          let httpurl = ''\n          let method = ''\n          if (!this.model.id) {\n            httpurl += this.url.add\n            method = 'post'\n          } else {\n            httpurl += this.url.edit\n            method = 'put'\n          }\n\n          let formData = Object.assign(this.model, values)\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    },\n\n\n  }\n}\n",null]}