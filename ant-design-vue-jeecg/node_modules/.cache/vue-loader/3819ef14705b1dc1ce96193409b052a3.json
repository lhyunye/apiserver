{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JUpload.vue","mtime":1618453704900},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Vue from 'vue'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport { getFileAccessHttpUrl } from '@/api/manage';\n\nconst FILE_TYPE_ALL = \"all\"\nconst FILE_TYPE_IMG = \"image\"\nconst FILE_TYPE_TXT = \"file\"\nconst uidGenerator=()=>{\n  return '-'+parseInt(Math.random()*10000+1,10);\n}\nconst getFileName=(path)=>{\n  if(path.lastIndexOf(\"\\\\\")>=0){\n    let reg=new RegExp(\"\\\\\\\\\",\"g\");\n    path = path.replace(reg,\"/\");\n  }\n  return path.substring(path.lastIndexOf(\"/\")+1);\n}\nexport default {\n  name: 'JUpload',\n  data(){\n    return {\n      uploadAction:window._CONFIG['domianURL']+\"/sys/common/upload\",\n      urlDownload:window._CONFIG['staticDomainURL'],\n      headers:{},\n      fileList: [],\n      newFileList: [],\n    }\n  },\n  props:{\n    text:{\n      type:String,\n      required:false,\n      default:\"点击上传\"\n    },\n    fileType:{\n      type:String,\n      required:false,\n      default:FILE_TYPE_ALL\n    },\n    /*这个属性用于控制文件上传的业务路径*/\n    bizPath:{\n      type:String,\n      required:false,\n      default:\"temp\"\n    },\n    value:{\n      type:[String,Array],\n      required:false\n    },\n    // update-begin- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\n    disabled:{\n      type:Boolean,\n      required:false,\n      default: false\n    },\n    // update-end- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\n    //此属性被废弃了\n    triggerChange:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    /**\n     * update -- author:lvdandan -- date:20190219 -- for:Jupload组件增加是否返回url，\n     * true：仅返回url\n     * false：返回fileName filePath fileSize\n     */\n    returnUrl:{\n      type:Boolean,\n      required:false,\n      default: true\n    },\n  },\n  watch:{\n    value(val){\n      if (val instanceof Array) {\n        if(this.returnUrl){\n          this.initFileList(val.join(','))\n        }else{\n          this.initFileListArr(val);\n        }\n      } else {\n        this.initFileList(val)\n      }\n    }\n  },\n  created(){\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token}\n  },\n\n  methods:{\n    initFileListArr(val){\n      if(!val || val.length==0){\n        this.fileList = [];\n        return;\n      }\n      let fileList = [];\n      for(var a=0;a<val.length;a++){\n        fileList.push({\n          uid:uidGenerator(),\n          name:val[a].fileName,\n          status: 'done',\n          url: val[a].filePath,\n          response:{\n            status:\"history\",\n            message:val[a].filePath\n          }\n        })\n      }\n      this.fileList = fileList\n    },\n    initFileList(paths){\n      if(!paths || paths.length==0){\n        //return [];\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n        this.fileList = [];\n        return;\n        // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n      }\n      let fileList = [];\n      let arr = paths.split(\",\")\n      for(var a=0;a<arr.length;a++){\n        let url = getFileAccessHttpUrl(arr[a],this.urlDownload,\"http\");\n        fileList.push({\n          uid:uidGenerator(),\n          name:getFileName(arr[a]),\n          status: 'done',\n          url: url,\n          response:{\n            status:\"history\",\n            message:arr[a]\n          }\n        })\n      }\n      this.fileList = fileList\n    },\n    handlePathChange(){\n      let uploadFiles = this.fileList\n      let path = ''\n      if(!uploadFiles || uploadFiles.length==0){\n        path = ''\n      }\n      let arr = [];\n\n      for(var a=0;a<uploadFiles.length;a++){\n        arr.push(uploadFiles[a].response.message)\n      }\n      if(arr.length>0){\n        path = arr.join(\",\")\n      }\n      this.$emit('change', path);\n    },\n    beforeUpload(file){\n      var fileType = file.type;\n      if(fileType===FILE_TYPE_IMG){\n        if(fileType.indexOf('image')<0){\n          this.$message.warning('请上传图片');\n          return false;\n        }\n      }else if(fileType===FILE_TYPE_TXT){\n        if(fileType.indexOf('image')>=0){\n          this.$message.warning('请上传文件');\n          return false;\n        }\n      }\n      //TODO 扩展功能验证文件大小\n      return true\n    },\n    handleChange(info) {\n      console.log(\"--文件列表改变--\")\n      let fileList = info.fileList\n      if(info.file.status==='done'){\n        if(info.file.response.success){\n          fileList = fileList.map((file) => {\n            if (file.response) {\n              let reUrl = file.response.message;\n              file.url = getFileAccessHttpUrl(reUrl,this.urlDownload,\"http\");\n            }\n            return file;\n          });\n        }\n        //this.$message.success(`${info.file.name} 上传成功!`);\n      }else if (info.file.status === 'error') {\n        this.$message.error(`${info.file.name} 上传失败.`);\n      }else if(info.file.status === 'removed'){\n        this.handleDelete(info.file)\n      }\n      this.fileList = fileList\n      if(info.file.status==='done' || info.file.status === 'removed'){\n        //returnUrl为true时仅返回文件路径\n        if(this.returnUrl){\n          this.handlePathChange()\n        }else{\n          //returnUrl为false时返回文件名称、文件路径及文件大小\n          fileList = fileList.filter((file) => {\n            if (file.response) {\n              return file.response.success === true;\n            }\n            return false;\n          }).map((file) => {\n            var fileJson = {\n              fileName:file.name,\n              filePath:file.response.message,\n              fileSize:file.size\n            };\n            this.newFileList.push(fileJson);\n            this.$emit('change', this.newFileList);\n          });\n        }\n      }\n    },\n    handleDelete(file){\n      //如有需要新增 删除逻辑\n      console.log(file)\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"JUpload.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-upload\r\n    name=\"file\"\r\n    :multiple=\"true\"\r\n    :action=\"uploadAction\"\r\n    :headers=\"headers\"\r\n    :data=\"{'biz':bizPath}\"\r\n    :fileList=\"fileList\"\r\n    :beforeUpload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n    :disabled=\"disabled\"\r\n    :returnUrl=\"returnUrl\">\r\n    <a-button>\r\n      <a-icon type=\"upload\" />{{ text }}\r\n    </a-button>\r\n  </a-upload>\r\n</template>\r\n\r\n<script>\r\n\r\n  import Vue from 'vue'\r\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\r\n  import { getFileAccessHttpUrl } from '@/api/manage';\r\n\r\n  const FILE_TYPE_ALL = \"all\"\r\n  const FILE_TYPE_IMG = \"image\"\r\n  const FILE_TYPE_TXT = \"file\"\r\n  const uidGenerator=()=>{\r\n    return '-'+parseInt(Math.random()*10000+1,10);\r\n  }\r\n  const getFileName=(path)=>{\r\n    if(path.lastIndexOf(\"\\\\\")>=0){\r\n      let reg=new RegExp(\"\\\\\\\\\",\"g\");\r\n      path = path.replace(reg,\"/\");\r\n    }\r\n    return path.substring(path.lastIndexOf(\"/\")+1);\r\n  }\r\n  export default {\r\n    name: 'JUpload',\r\n    data(){\r\n      return {\r\n        uploadAction:window._CONFIG['domianURL']+\"/sys/common/upload\",\r\n        urlDownload:window._CONFIG['staticDomainURL'],\r\n        headers:{},\r\n        fileList: [],\r\n        newFileList: [],\r\n      }\r\n    },\r\n    props:{\r\n      text:{\r\n        type:String,\r\n        required:false,\r\n        default:\"点击上传\"\r\n      },\r\n      fileType:{\r\n        type:String,\r\n        required:false,\r\n        default:FILE_TYPE_ALL\r\n      },\r\n      /*这个属性用于控制文件上传的业务路径*/\r\n      bizPath:{\r\n        type:String,\r\n        required:false,\r\n        default:\"temp\"\r\n      },\r\n      value:{\r\n        type:[String,Array],\r\n        required:false\r\n      },\r\n      // update-begin- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\r\n      disabled:{\r\n        type:Boolean,\r\n        required:false,\r\n        default: false\r\n      },\r\n      // update-end- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\r\n      //此属性被废弃了\r\n      triggerChange:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      /**\r\n       * update -- author:lvdandan -- date:20190219 -- for:Jupload组件增加是否返回url，\r\n       * true：仅返回url\r\n       * false：返回fileName filePath fileSize\r\n       */\r\n      returnUrl:{\r\n        type:Boolean,\r\n        required:false,\r\n        default: true\r\n      },\r\n    },\r\n    watch:{\r\n      value(val){\r\n        if (val instanceof Array) {\r\n          if(this.returnUrl){\r\n            this.initFileList(val.join(','))\r\n          }else{\r\n            this.initFileListArr(val);\r\n          }\r\n        } else {\r\n          this.initFileList(val)\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      const token = Vue.ls.get(ACCESS_TOKEN);\r\n      this.headers = {\"X-Access-Token\":token}\r\n    },\r\n\r\n    methods:{\r\n      initFileListArr(val){\r\n        if(!val || val.length==0){\r\n          this.fileList = [];\r\n          return;\r\n        }\r\n        let fileList = [];\r\n        for(var a=0;a<val.length;a++){\r\n          fileList.push({\r\n            uid:uidGenerator(),\r\n            name:val[a].fileName,\r\n            status: 'done',\r\n            url: val[a].filePath,\r\n            response:{\r\n              status:\"history\",\r\n              message:val[a].filePath\r\n            }\r\n          })\r\n        }\r\n        this.fileList = fileList\r\n      },\r\n      initFileList(paths){\r\n        if(!paths || paths.length==0){\r\n          //return [];\r\n          // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n          this.fileList = [];\r\n          return;\r\n          // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n        }\r\n        let fileList = [];\r\n        let arr = paths.split(\",\")\r\n        for(var a=0;a<arr.length;a++){\r\n          let url = getFileAccessHttpUrl(arr[a],this.urlDownload,\"http\");\r\n          fileList.push({\r\n            uid:uidGenerator(),\r\n            name:getFileName(arr[a]),\r\n            status: 'done',\r\n            url: url,\r\n            response:{\r\n              status:\"history\",\r\n              message:arr[a]\r\n            }\r\n          })\r\n        }\r\n        this.fileList = fileList\r\n      },\r\n      handlePathChange(){\r\n        let uploadFiles = this.fileList\r\n        let path = ''\r\n        if(!uploadFiles || uploadFiles.length==0){\r\n          path = ''\r\n        }\r\n        let arr = [];\r\n\r\n        for(var a=0;a<uploadFiles.length;a++){\r\n          arr.push(uploadFiles[a].response.message)\r\n        }\r\n        if(arr.length>0){\r\n          path = arr.join(\",\")\r\n        }\r\n        this.$emit('change', path);\r\n      },\r\n      beforeUpload(file){\r\n        var fileType = file.type;\r\n        if(fileType===FILE_TYPE_IMG){\r\n          if(fileType.indexOf('image')<0){\r\n            this.$message.warning('请上传图片');\r\n            return false;\r\n          }\r\n        }else if(fileType===FILE_TYPE_TXT){\r\n          if(fileType.indexOf('image')>=0){\r\n            this.$message.warning('请上传文件');\r\n            return false;\r\n          }\r\n        }\r\n        //TODO 扩展功能验证文件大小\r\n        return true\r\n      },\r\n      handleChange(info) {\r\n        console.log(\"--文件列表改变--\")\r\n        let fileList = info.fileList\r\n        if(info.file.status==='done'){\r\n          if(info.file.response.success){\r\n            fileList = fileList.map((file) => {\r\n              if (file.response) {\r\n                let reUrl = file.response.message;\r\n                file.url = getFileAccessHttpUrl(reUrl,this.urlDownload,\"http\");\r\n              }\r\n              return file;\r\n            });\r\n          }\r\n          //this.$message.success(`${info.file.name} 上传成功!`);\r\n        }else if (info.file.status === 'error') {\r\n          this.$message.error(`${info.file.name} 上传失败.`);\r\n        }else if(info.file.status === 'removed'){\r\n          this.handleDelete(info.file)\r\n        }\r\n        this.fileList = fileList\r\n        if(info.file.status==='done' || info.file.status === 'removed'){\r\n          //returnUrl为true时仅返回文件路径\r\n          if(this.returnUrl){\r\n            this.handlePathChange()\r\n          }else{\r\n            //returnUrl为false时返回文件名称、文件路径及文件大小\r\n            fileList = fileList.filter((file) => {\r\n              if (file.response) {\r\n                return file.response.success === true;\r\n              }\r\n              return false;\r\n            }).map((file) => {\r\n              var fileJson = {\r\n                fileName:file.name,\r\n                filePath:file.response.message,\r\n                fileSize:file.size\r\n              };\r\n              this.newFileList.push(fileJson);\r\n              this.$emit('change', this.newFileList);\r\n            });\r\n          }\r\n        }\r\n      },\r\n      handleDelete(file){\r\n        //如有需要新增 删除逻辑\r\n        console.log(file)\r\n      },\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}