{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JInput.vue","mtime":1618453704896},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nconst JINPUT_QUERY_LIKE = 'like';\nconst JINPUT_QUERY_NE = 'ne';\nconst JINPUT_QUERY_GE = 'ge'; //大于等于\nconst JINPUT_QUERY_LE = 'le'; //小于等于\n\nexport default {\n  name: 'JInput',\n  props:{\n    value:{\n      type:String,\n      required:false\n    },\n    type:{\n      type:String,\n      required:false,\n      default:JINPUT_QUERY_LIKE\n    },\n    placeholder:{\n      type:String,\n      required:false,\n      default:''\n    }\n  },\n  watch:{\n    value:{\n      immediate:true,\n      handler:function(){\n        this.initVal();\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data(){\n    return {\n      inputVal:''\n    }\n  },\n  methods:{\n    initVal(){\n      if(!this.value){\n        this.inputVal = ''\n      }else{\n        let text = this.value\n        switch (this.type) {\n          case JINPUT_QUERY_LIKE:\n            text = text.substring(1,text.length-1);\n            break;\n          case JINPUT_QUERY_NE:\n            text = text.substring(1);\n            break;\n          case JINPUT_QUERY_GE:\n            text = text.substring(2);\n            break;\n          case JINPUT_QUERY_LE:\n            text = text.substring(2);\n            break;\n          default:\n        }\n        this.inputVal = text\n      }\n    },\n    backValue(e){\n      let text = e.target.value\n      switch (this.type) {\n        case JINPUT_QUERY_LIKE:\n          text = \"*\"+text+\"*\";\n          break;\n        case JINPUT_QUERY_NE:\n          text = \"!\"+text;\n          break;\n        case JINPUT_QUERY_GE:\n          text = \">=\"+text;\n          break;\n        case JINPUT_QUERY_LE:\n          text = \"<=\"+text;\n          break;\n        default:\n      }\n      this.$emit(\"change\",text)\n    }\n  }\n}\n",{"version":3,"sources":["JInput.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JInput.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-input :placeholder=\"placeholder\" :value=\"inputVal\" @input=\"backValue\"></a-input>\r\n</template>\r\n\r\n<script>\r\n  const JINPUT_QUERY_LIKE = 'like';\r\n  const JINPUT_QUERY_NE = 'ne';\r\n  const JINPUT_QUERY_GE = 'ge'; //大于等于\r\n  const JINPUT_QUERY_LE = 'le'; //小于等于\r\n  \r\n  export default {\r\n    name: 'JInput',\r\n    props:{\r\n      value:{\r\n        type:String,\r\n        required:false\r\n      },\r\n      type:{\r\n        type:String,\r\n        required:false,\r\n        default:JINPUT_QUERY_LIKE\r\n      },\r\n      placeholder:{\r\n        type:String,\r\n        required:false,\r\n        default:''\r\n      }\r\n    },\r\n    watch:{\r\n      value:{\r\n        immediate:true,\r\n        handler:function(){\r\n          this.initVal();\r\n        }\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    },\r\n    data(){\r\n      return {\r\n        inputVal:''\r\n      }\r\n    },\r\n    methods:{\r\n      initVal(){\r\n        if(!this.value){\r\n          this.inputVal = ''\r\n        }else{\r\n          let text = this.value\r\n          switch (this.type) {\r\n            case JINPUT_QUERY_LIKE:\r\n              text = text.substring(1,text.length-1);\r\n              break;\r\n            case JINPUT_QUERY_NE:\r\n              text = text.substring(1);\r\n              break;\r\n            case JINPUT_QUERY_GE:\r\n              text = text.substring(2);\r\n              break;\r\n            case JINPUT_QUERY_LE:\r\n              text = text.substring(2);\r\n              break;\r\n            default:\r\n          }\r\n          this.inputVal = text\r\n        }\r\n      },\r\n      backValue(e){\r\n        let text = e.target.value\r\n        switch (this.type) {\r\n          case JINPUT_QUERY_LIKE:\r\n            text = \"*\"+text+\"*\";\r\n            break;\r\n          case JINPUT_QUERY_NE:\r\n            text = \"!\"+text;\r\n            break;\r\n          case JINPUT_QUERY_GE:\r\n            text = \">=\"+text;\r\n            break;\r\n          case JINPUT_QUERY_LE:\r\n            text = \"<=\"+text;\r\n            break;\r\n          default:\r\n        }\r\n        this.$emit(\"change\",text)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}