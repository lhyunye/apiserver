{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\demonstration\\TestDevList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\demonstration\\TestDevList.vue","mtime":1627354337228},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction } from '@/api/manage'\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport TestDevModal from './modules/TestDevModal'\nimport {filterMultiDictText} from '@/components/dict/JDictSelectUtil'\n\nexport default {\n  name: \"TestDevList\",\n  mixins:[JeecgListMixin],\n  components: {\n    TestDevModal\n  },\n  data () {\n    return {\n      description: '测试表生成管理页面',\n      // 表头\n      columns: [\n        {\n          title:'创建人',\n          align:\"left\",\n          dataIndex: 'createBy'\n        },\n        {\n          title:'创建日期',\n          align:\"left\",\n          dataIndex: 'createTime'\n        },\n        {\n          title:'更新人',\n          align:\"left\",\n          dataIndex: 'updateBy'\n        },\n        {\n          title:'更新日期',\n          align:\"left\",\n          dataIndex: 'updateTime'\n        },\n        {\n          title:'所属部门',\n          align:\"left\",\n          dataIndex: 'sysOrgCode'\n        },\n        {\n          title:'名称',\n          align:\"left\",\n          dataIndex: 'name'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align:\"center\",\n          scopedSlots: { customRender: 'action' },\n        }\n      ],\n      url: {\n        list: \"/demonstration/testDev/rootList\",\n        childList: \"/demonstration/testDev/childList\",\n        delete: \"/demonstration/testDev/delete\",\n        deleteBatch: \"/demonstration/testDev/deleteBatch\",\n        exportXlsUrl: \"/demonstration/testDev/exportXls\",\n        importExcelUrl: \"demonstration/testDev/importExcel\",\n      },\n      expandedRowKeys:[],\n      hasChildrenField:\"hasChild\",\n      pidField:\"pid\",\n      dictOptions: {}\n    }\n  },\n  computed: {\n    importExcelUrl(){\n      return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n    },\n    tableProps() {\n      let _this = this\n      return {\n        // 列表项是否可选择\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n        }\n      }\n    }\n  },\n  methods: {\n    loadData(arg){\n      if(arg==1){\n        this.ipagination.current=1\n      }\n      this.loading = true\n      this.expandedRowKeys = []\n      let params = this.getQueryParams()\n      return new Promise((resolve) => {\n        getAction(this.url.list,params).then(res=>{\n          if(res.success){\n            let result = res.result\n            if(Number(result.total)>0){\n              this.ipagination.total = Number(result.total)\n              this.dataSource = this.getDataByResult(res.result.records)\n              resolve()\n            }else{\n              this.ipagination.total=0\n              this.dataSource=[]\n            }\n          }else{\n            this.$message.warning(res.message)\n          }\n          this.loading = false\n        })\n      })\n    },\n    getDataByResult(result){\n      return result.map(item=>{\n        //判断是否标记了带有子节点\n        if(item[this.hasChildrenField]=='1'){\n          let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\n          item.children = [loadChild]\n        }\n        return item\n      })\n    },\n    handleExpand(expanded, record){\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id)\n        if (record.children.length>0 && record.children[0].isLoading === true) {\n          let params = this.getQueryParams();//查询条件\n          params[this.pidField] = record.id\n          getAction(this.url.childList,params).then((res)=>{\n            if(res.success){\n              if(res.result && res.result.length>0){\n                record.children = this.getDataByResult(res.result)\n                this.dataSource = [...this.dataSource]\n              }else{\n                record.children=''\n                record.hasChildrenField='0'\n              }\n            }else{\n              this.$message.warning(res.message)\n            }\n          })\n        }\n      }else{\n        let keyIndex = this.expandedRowKeys.indexOf(record.id)\n        if(keyIndex>=0){\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    initDictConfig(){\n    },\n    modalFormOk(formData,arr){\n      if(!formData.id){\n        this.addOk(formData,arr)\n      }else{\n        if(!arr){\n          this.loadData()\n        }else{\n          this.editOk(formData,this.dataSource)\n          this.dataSource=[...this.dataSource]\n        }\n      }\n    },\n    editOk(formData,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==formData.id){\n            arr[i]=formData\n            break\n          }else{\n            this.editOk(formData,arr[i].children)\n          }\n        }\n      }\n    },\n    async addOk(formData,arr){\n      if(!formData[this.pidField]){\n        this.loadData()\n      }else{\n        this.expandedRowKeys=[]\n        for(let i of arr){\n          await this.expandTreeNode(i)\n        }\n      }\n    },\n    expandTreeNode(nodeId){\n      return new Promise((resolve,reject)=>{\n        this.getFormDataById(nodeId,this.dataSource)\n        let row = this.parentFormData\n        this.expandedRowKeys.push(nodeId)\n        let params = this.getQueryParams();//查询条件\n        params[this.pidField] = nodeId\n        getAction(this.url.childList,params).then((res)=>{\n          if(res.success){\n            if(res.result && res.result.length>0){\n              row.children = this.getDataByResult(res.result)\n              this.dataSource = [...this.dataSource]\n              resolve()\n            }else{\n              reject()\n            }\n          }else{\n            reject()\n          }\n        })\n      })\n    },\n    getFormDataById(id,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==id){\n            this.parentFormData = arr[i]\n          }else{\n            this.getFormDataById(id,arr[i].children)\n          }\n        }\n      }\n    },\n    \n     \n  }\n}\n",{"version":3,"sources":["TestDevList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"TestDevList.vue","sourceRoot":"src/views/demonstration","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    \r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\r\n      <a-button type=\"primary\" icon=\"download\" @click=\"handleExportXls('测试表生成')\">导出</a-button>\r\n      <a-upload name=\"file\" :showUploadList=\"false\" :multiple=\"false\" :headers=\"tokenHeader\" :action=\"importExcelUrl\" @change=\"handleImportExcel\">\r\n        <a-button type=\"primary\" icon=\"import\">导入</a-button>\r\n      </a-upload>\r\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\r\n        <a-menu slot=\"overlay\">\r\n          <a-menu-item key=\"1\" @click=\"batchDel\"><a-icon type=\"delete\"/>删除</a-menu-item>\r\n        </a-menu>\r\n        <a-button style=\"margin-left: 8px\"> 批量操作 <a-icon type=\"down\" /></a-button>\r\n      </a-dropdown>\r\n    </div>\r\n\r\n    <!-- table区域-begin -->\r\n    <div>\r\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i> 已选择 <a style=\"font-weight: 600\">{{ selectedRowKeys.length }}</a>项\r\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n      </div>\r\n\r\n      <a-table\r\n        ref=\"table\"\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"ipagination\"\r\n        :loading=\"loading\"\r\n        :expandedRowKeys=\"expandedRowKeys\"\r\n        @change=\"handleTableChange\"\r\n        @expand=\"handleExpand\"\r\n        v-bind=\"tableProps\">\r\n        \r\n        <template slot=\"imgSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\r\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\r\n        </template>\r\n        <template slot=\"fileSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\r\n          <a-button\r\n            v-else\r\n            :ghost=\"true\"\r\n            type=\"primary\"\r\n            icon=\"download\"\r\n            size=\"small\"\r\n            @click=\"uploadFile(text)\">\r\n            下载\r\n          </a-button>\r\n        </template>\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click=\"handleEdit(record)\">编辑</a>\r\n\r\n          <a-divider type=\"vertical\" />\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">更多 <a-icon type=\"down\" /></a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item>\r\n                <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDelete(record.id)\">\r\n                  <a>删除</a>\r\n                </a-popconfirm>\r\n              </a-menu-item>\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n\r\n      </a-table>\r\n    </div>\r\n\r\n    <testDev-modal ref=\"modalForm\" @ok=\"modalFormOk\"></testDev-modal>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { getAction } from '@/api/manage'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import TestDevModal from './modules/TestDevModal'\r\n  import {filterMultiDictText} from '@/components/dict/JDictSelectUtil'\r\n  \r\n  export default {\r\n    name: \"TestDevList\",\r\n    mixins:[JeecgListMixin],\r\n    components: {\r\n      TestDevModal\r\n    },\r\n    data () {\r\n      return {\r\n        description: '测试表生成管理页面',\r\n        // 表头\r\n        columns: [\r\n          {\r\n            title:'创建人',\r\n            align:\"left\",\r\n            dataIndex: 'createBy'\r\n          },\r\n          {\r\n            title:'创建日期',\r\n            align:\"left\",\r\n            dataIndex: 'createTime'\r\n          },\r\n          {\r\n            title:'更新人',\r\n            align:\"left\",\r\n            dataIndex: 'updateBy'\r\n          },\r\n          {\r\n            title:'更新日期',\r\n            align:\"left\",\r\n            dataIndex: 'updateTime'\r\n          },\r\n          {\r\n            title:'所属部门',\r\n            align:\"left\",\r\n            dataIndex: 'sysOrgCode'\r\n          },\r\n          {\r\n            title:'名称',\r\n            align:\"left\",\r\n            dataIndex: 'name'\r\n          },\r\n          {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            align:\"center\",\r\n            scopedSlots: { customRender: 'action' },\r\n          }\r\n        ],\r\n        url: {\r\n          list: \"/demonstration/testDev/rootList\",\r\n          childList: \"/demonstration/testDev/childList\",\r\n          delete: \"/demonstration/testDev/delete\",\r\n          deleteBatch: \"/demonstration/testDev/deleteBatch\",\r\n          exportXlsUrl: \"/demonstration/testDev/exportXls\",\r\n          importExcelUrl: \"demonstration/testDev/importExcel\",\r\n        },\r\n        expandedRowKeys:[],\r\n        hasChildrenField:\"hasChild\",\r\n        pidField:\"pid\",\r\n        dictOptions: {}\r\n      }\r\n    },\r\n    computed: {\r\n      importExcelUrl(){\r\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\r\n      },\r\n      tableProps() {\r\n        let _this = this\r\n        return {\r\n          // 列表项是否可选择\r\n          rowSelection: {\r\n            selectedRowKeys: _this.selectedRowKeys,\r\n            onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      loadData(arg){\r\n        if(arg==1){\r\n          this.ipagination.current=1\r\n        }\r\n        this.loading = true\r\n        this.expandedRowKeys = []\r\n        let params = this.getQueryParams()\r\n        return new Promise((resolve) => {\r\n          getAction(this.url.list,params).then(res=>{\r\n            if(res.success){\r\n              let result = res.result\r\n              if(Number(result.total)>0){\r\n                this.ipagination.total = Number(result.total)\r\n                this.dataSource = this.getDataByResult(res.result.records)\r\n                resolve()\r\n              }else{\r\n                this.ipagination.total=0\r\n                this.dataSource=[]\r\n              }\r\n            }else{\r\n              this.$message.warning(res.message)\r\n            }\r\n            this.loading = false\r\n          })\r\n        })\r\n      },\r\n      getDataByResult(result){\r\n        return result.map(item=>{\r\n          //判断是否标记了带有子节点\r\n          if(item[this.hasChildrenField]=='1'){\r\n            let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\r\n            item.children = [loadChild]\r\n          }\r\n          return item\r\n        })\r\n      },\r\n      handleExpand(expanded, record){\r\n        // 判断是否是展开状态\r\n        if (expanded) {\r\n          this.expandedRowKeys.push(record.id)\r\n          if (record.children.length>0 && record.children[0].isLoading === true) {\r\n            let params = this.getQueryParams();//查询条件\r\n            params[this.pidField] = record.id\r\n            getAction(this.url.childList,params).then((res)=>{\r\n              if(res.success){\r\n                if(res.result && res.result.length>0){\r\n                  record.children = this.getDataByResult(res.result)\r\n                  this.dataSource = [...this.dataSource]\r\n                }else{\r\n                  record.children=''\r\n                  record.hasChildrenField='0'\r\n                }\r\n              }else{\r\n                this.$message.warning(res.message)\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          let keyIndex = this.expandedRowKeys.indexOf(record.id)\r\n          if(keyIndex>=0){\r\n            this.expandedRowKeys.splice(keyIndex, 1);\r\n          }\r\n        }\r\n      },\r\n      initDictConfig(){\r\n      },\r\n      modalFormOk(formData,arr){\r\n        if(!formData.id){\r\n          this.addOk(formData,arr)\r\n        }else{\r\n          if(!arr){\r\n            this.loadData()\r\n          }else{\r\n            this.editOk(formData,this.dataSource)\r\n            this.dataSource=[...this.dataSource]\r\n          }\r\n        }\r\n      },\r\n      editOk(formData,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==formData.id){\r\n              arr[i]=formData\r\n              break\r\n            }else{\r\n              this.editOk(formData,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      async addOk(formData,arr){\r\n        if(!formData[this.pidField]){\r\n          this.loadData()\r\n        }else{\r\n          this.expandedRowKeys=[]\r\n          for(let i of arr){\r\n            await this.expandTreeNode(i)\r\n          }\r\n        }\r\n      },\r\n      expandTreeNode(nodeId){\r\n        return new Promise((resolve,reject)=>{\r\n          this.getFormDataById(nodeId,this.dataSource)\r\n          let row = this.parentFormData\r\n          this.expandedRowKeys.push(nodeId)\r\n          let params = this.getQueryParams();//查询条件\r\n          params[this.pidField] = nodeId\r\n          getAction(this.url.childList,params).then((res)=>{\r\n            if(res.success){\r\n              if(res.result && res.result.length>0){\r\n                row.children = this.getDataByResult(res.result)\r\n                this.dataSource = [...this.dataSource]\r\n                resolve()\r\n              }else{\r\n                reject()\r\n              }\r\n            }else{\r\n              reject()\r\n            }\r\n          })\r\n        })\r\n      },\r\n      getFormDataById(id,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==id){\r\n              this.parentFormData = arr[i]\r\n            }else{\r\n              this.getFormDataById(id,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n       \r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>"]}]}