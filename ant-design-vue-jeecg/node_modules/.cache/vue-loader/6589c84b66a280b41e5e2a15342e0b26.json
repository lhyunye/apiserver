{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\deva\\modules\\TestNewModal__Style#Drawer.vue?vue&type=style&index=0&id=bb0d78fa&lang=less&scoped=true&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\deva\\modules\\TestNewModal__Style#Drawer.vue","mtime":1627356941197},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1605147039453},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1618457253212},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1605147255162},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1604284280308},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/** Button按钮间距 */\r\n  .ant-btn {\r\n    margin-left: 30px;\r\n    margin-bottom: 30px;\r\n    float: right;\r\n  }\r\n",{"version":3,"sources":["TestNewModal__Style#Drawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA","file":"TestNewModal__Style#Drawer.vue","sourceRoot":"src/views/deva/modules","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :width=\"width\"\r\n    placement=\"right\"\r\n    :closable=\"false\"\r\n    @close=\"close\"\r\n    :visible=\"visible\">\r\n  \r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入名称\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"性别\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'sex', validatorRules.sex]\" placeholder=\"请输入性别\"></a-input>\r\n        </a-form-item>\r\n        \r\n      </a-form>\r\n    </a-spin>\r\n    <a-button type=\"primary\" @click=\"handleOk\">确定</a-button>\r\n    <a-button type=\"primary\" @click=\"handleCancel\">取消</a-button>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n  \r\n  export default {\r\n    name: \"TestNewModal\",\r\n    components: { \r\n    },\r\n    data () {\r\n      return {\r\n        form: this.$form.createForm(this),\r\n        title:\"操作\",\r\n        width:800,\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          name: {rules: [\r\n          ]},\r\n          sex: {rules: [\r\n          ]},\r\n        },\r\n        url: {\r\n          add: \"/dev/testNew/add\",\r\n          edit: \"/dev/testNew/edit\",\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n    },\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'name','sex'))\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            console.log(\"表单提交数据\",formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }\r\n         \r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      popupCallback(row){\r\n        this.form.setFieldsValue(pick(row,'name','sex'))\r\n      }\r\n      \r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/** Button按钮间距 */\r\n  .ant-btn {\r\n    margin-left: 30px;\r\n    margin-bottom: 30px;\r\n    float: right;\r\n  }\r\n</style>"]}]}