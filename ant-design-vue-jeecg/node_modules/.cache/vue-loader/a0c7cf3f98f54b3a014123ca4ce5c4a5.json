{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImageUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JImageUpload.vue","mtime":1618453704896},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport { getFileAccessHttpUrl } from '@/api/manage'\n\nconst uidGenerator=()=>{\n  return '-'+parseInt(Math.random()*10000+1,10);\n}\nconst getFileName=(path)=>{\n  if(path.lastIndexOf(\"\\\\\")>=0){\n    let reg=new RegExp(\"\\\\\\\\\",\"g\");\n    path = path.replace(reg,\"/\");\n  }\n  return path.substring(path.lastIndexOf(\"/\")+1);\n}\nexport default {\n  name: 'JImageUpload',\n  data(){\n    return {\n      uploadAction:window._CONFIG['domianURL']+\"/sys/common/upload\",\n      urlView:window._CONFIG['staticDomainURL'],\n      uploadLoading:false,\n      picUrl:false,\n      headers:{},\n      fileList: [],\n      previewImage:\"\",\n      previewVisible: false,\n    }\n  },\n  props:{\n    text:{\n      type:String,\n      required:false,\n      default:\"上传\"\n    },\n    /*这个属性用于控制文件上传的业务路径*/\n    bizPath:{\n      type:String,\n      required:false,\n      default:\"temp\"\n    },\n    value:{\n      type:[String,Array],\n      required:false\n    },\n    disabled:{\n      type:Boolean,\n      required:false,\n      default: false\n    },\n    isMultiple:{\n      type:Boolean,\n      required:false,\n      default: false\n    }\n  },\n  watch:{\n    value(val){\n      if (val instanceof Array) {\n        this.initFileList(val.join(','))\n      } else {\n        this.initFileList(val)\n      }\n    }\n  },\n  created(){\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token}\n  },\n  methods:{\n    initFileList(paths){\n      if(!paths || paths.length==0){\n        this.fileList = [];\n        return;\n      }\n      this.picUrl = true;\n      let fileList = [];\n      let arr = paths.split(\",\")\n      for(var a=0;a<arr.length;a++){\n        let url = getFileAccessHttpUrl(arr[a],this.urlView,\"http\");\n        fileList.push({\n          uid: uidGenerator(),\n          name: getFileName(arr[a]),\n          status: 'done',\n          url: url,\n          response:{\n            status:\"history\",\n            message:arr[a]\n          }\n        })\n      }\n      this.fileList = fileList\n    },\n    beforeUpload: function(file){\n      var fileType = file.type;\n      if(fileType.indexOf('image')<0){\n        this.$message.warning('请上传图片');\n        return false;\n      }\n    },\n    handleChange(info) {\n      this.picUrl = false;\n      let fileList = info.fileList\n      if(info.file.status==='done'){\n        if(info.file.response.success){\n          this.picUrl = true;\n          fileList = fileList.map((file) => {\n            if (file.response) {\n              file.url = file.response.message;\n            }\n            return file;\n          });\n        }\n        //this.$message.success(`${info.file.name} 上传成功!`);\n      }else if (info.file.status === 'error') {\n        this.$message.error(`${info.file.name} 上传失败.`);\n      }else if(info.file.status === 'removed'){\n        this.handleDelete(info.file)\n      }\n      this.fileList = fileList\n      if(info.file.status==='done' || info.file.status === 'removed'){\n        this.handlePathChange()\n      }\n    },\n    // 预览\n    handlePreview (file) {\n      this.previewImage = file.url || file.thumbUrl\n      this.previewVisible = true\n    },\n    getAvatarView(){\n      if(this.fileList.length>0){\n        let url = this.fileList[0].url\n        return getFileAccessHttpUrl(url,this.urlView,\"http\")\n      }\n    },\n    handlePathChange(){\n      let uploadFiles = this.fileList\n      let path = ''\n      if(!uploadFiles || uploadFiles.length==0){\n        path = ''\n      }\n      let arr = [];\n      if(!this.isMultiple){\n        arr.push(uploadFiles[uploadFiles.length-1].response.message)\n      }else{\n        for(var a=0;a<uploadFiles.length;a++){\n          arr.push(uploadFiles[a].response.message)\n        }\n      }\n      if(arr.length>0){\n        path = arr.join(\",\")\n      }\n      this.$emit('change', path);\n    },\n    handleDelete(file){\n      //如有需要新增 删除逻辑\n      console.log(file)\n    },\n    handleCancel() {\n      this.close();\n      this.previewVisible = false;\n    },\n    close () {\n\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",null]}