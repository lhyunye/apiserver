{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgreport\\OnlCgreportHeadList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgreport\\OnlCgreportHeadList.vue","mtime":1618453704984},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1605147255423},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport Clipboard from 'clipboard';\nimport { getAction } from '@/api/manage';\nexport default {\n  name: 'OnlCgreportHeadList',\n  mixins: [JeecgListMixin],\n  components: {\n    Clipboard: Clipboard\n  },\n  data: function data() {\n    return {\n      description: '在线报表配置管理页面',\n      visible: false,\n      reportUrlText: '',\n      // 表头\n      columns: [{\n        title: '报表名称',\n        align: 'center',\n        dataIndex: 'name'\n      }, {\n        title: '编码',\n        align: 'center',\n        dataIndex: 'code'\n      }, {\n        title: '查询SQL',\n        align: 'center',\n        dataIndex: 'cgrSql'\n      }, {\n        title: '数据源',\n        align: 'center',\n        dataIndex: 'dbSource'\n      }, {\n        title: '创建时间',\n        align: 'center',\n        dataIndex: 'createTime'\n      }, {\n        title: '描述',\n        align: 'center',\n        dataIndex: 'content'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: 'center',\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      url: {\n        list: '/online/cgreport/head/list',\n        delete: '/online/cgreport/head/delete',\n        deleteBatch: '/online/cgreport/head/deleteBatch',\n        getParamsInfo: '/online/cgreport/api/getParamsInfo/'\n      }\n    };\n  },\n  methods: {\n    initReportUrlText: function initReportUrlText(id) {\n      var _this = this;\n\n      getAction(this.url.getParamsInfo + id).then(function (res) {\n        var textUrl = \"\";\n\n        if (res.success) {\n          if (res.result && res.result.length > 0) {\n            var _iterator = _createForOfIteratorHelper(res.result),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var i = _step.value;\n                textUrl += i.paramName + \"=${\" + i.paramName + \"}&\";\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        } else {\n          _this.$message.warning(res.message);\n        }\n\n        if (textUrl.length > 0) {\n          textUrl = textUrl.substring(0, textUrl.length - 1);\n          _this.reportUrlText = \"/online/cgreport/\".concat(id, \"?\").concat(textUrl);\n        } else {\n          _this.reportUrlText = \"/online/cgreport/\".concat(id);\n        }\n      });\n    },\n    goPageOnline: function goPageOnline(id) {\n      this.$router.push({\n        path: '/online/cgreport/' + id\n      });\n    },\n    popReportURL: function popReportURL(id) {\n      this.visible = true;\n      this.initReportUrlText(id);\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n      this.reportUrlText = '';\n    },\n    onCopyUrl: function onCopyUrl() {\n      var _this2 = this;\n\n      var clipboard = new Clipboard('.copy-this-text');\n      clipboard.on('success', function () {\n        clipboard.destroy();\n\n        _this2.$message.success('复制成功');\n\n        _this2.handleCancel();\n      });\n      clipboard.on('error', function () {\n        _this2.$message.error('该浏览器不支持自动复制');\n\n        clipboard.destroy();\n      });\n    }\n  }\n};",null]}