{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\demonstration\\TestDevList.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\demonstration\\TestDevList.vue","mtime":1627354337228},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport TestDevModal from \"./modules/TestDevModal\";\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: \"TestDevList\",\n  mixins: [JeecgListMixin],\n  components: {\n    TestDevModal: TestDevModal\n  },\n  data: function data() {\n    return {\n      description: '测试表生成管理页面',\n      // 表头\n      columns: [{\n        title: '创建人',\n        align: \"left\",\n        dataIndex: 'createBy'\n      }, {\n        title: '创建日期',\n        align: \"left\",\n        dataIndex: 'createTime'\n      }, {\n        title: '更新人',\n        align: \"left\",\n        dataIndex: 'updateBy'\n      }, {\n        title: '更新日期',\n        align: \"left\",\n        dataIndex: 'updateTime'\n      }, {\n        title: '所属部门',\n        align: \"left\",\n        dataIndex: 'sysOrgCode'\n      }, {\n        title: '名称',\n        align: \"left\",\n        dataIndex: 'name'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      url: {\n        list: \"/demonstration/testDev/rootList\",\n        childList: \"/demonstration/testDev/childList\",\n        delete: \"/demonstration/testDev/delete\",\n        deleteBatch: \"/demonstration/testDev/deleteBatch\",\n        exportXlsUrl: \"/demonstration/testDev/exportXls\",\n        importExcelUrl: \"demonstration/testDev/importExcel\"\n      },\n      expandedRowKeys: [],\n      hasChildrenField: \"hasChild\",\n      pidField: \"pid\",\n      dictOptions: {}\n    };\n  },\n  computed: {\n    importExcelUrl: function importExcelUrl() {\n      return \"\".concat(window._CONFIG['domianURL'], \"/\").concat(this.url.importExcelUrl);\n    },\n    tableProps: function tableProps() {\n      var _this = this;\n\n      return {\n        // 列表项是否可选择\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            return _this.selectedRowKeys = selectedRowKeys;\n          }\n        }\n      };\n    }\n  },\n  methods: {\n    loadData: function loadData(arg) {\n      var _this2 = this;\n\n      if (arg == 1) {\n        this.ipagination.current = 1;\n      }\n\n      this.loading = true;\n      this.expandedRowKeys = [];\n      var params = this.getQueryParams();\n      return new Promise(function (resolve) {\n        getAction(_this2.url.list, params).then(function (res) {\n          if (res.success) {\n            var result = res.result;\n\n            if (Number(result.total) > 0) {\n              _this2.ipagination.total = Number(result.total);\n              _this2.dataSource = _this2.getDataByResult(res.result.records);\n              resolve();\n            } else {\n              _this2.ipagination.total = 0;\n              _this2.dataSource = [];\n            }\n          } else {\n            _this2.$message.warning(res.message);\n          }\n\n          _this2.loading = false;\n        });\n      });\n    },\n    getDataByResult: function getDataByResult(result) {\n      var _this3 = this;\n\n      return result.map(function (item) {\n        //判断是否标记了带有子节点\n        if (item[_this3.hasChildrenField] == '1') {\n          var loadChild = {\n            id: item.id + '_loadChild',\n            name: 'loading...',\n            isLoading: true\n          };\n          item.children = [loadChild];\n        }\n\n        return item;\n      });\n    },\n    handleExpand: function handleExpand(expanded, record) {\n      var _this4 = this;\n\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id);\n\n        if (record.children.length > 0 && record.children[0].isLoading === true) {\n          var params = this.getQueryParams(); //查询条件\n\n          params[this.pidField] = record.id;\n          getAction(this.url.childList, params).then(function (res) {\n            if (res.success) {\n              if (res.result && res.result.length > 0) {\n                record.children = _this4.getDataByResult(res.result);\n                _this4.dataSource = _toConsumableArray(_this4.dataSource);\n              } else {\n                record.children = '';\n                record.hasChildrenField = '0';\n              }\n            } else {\n              _this4.$message.warning(res.message);\n            }\n          });\n        }\n      } else {\n        var keyIndex = this.expandedRowKeys.indexOf(record.id);\n\n        if (keyIndex >= 0) {\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    initDictConfig: function initDictConfig() {},\n    modalFormOk: function modalFormOk(formData, arr) {\n      if (!formData.id) {\n        this.addOk(formData, arr);\n      } else {\n        if (!arr) {\n          this.loadData();\n        } else {\n          this.editOk(formData, this.dataSource);\n          this.dataSource = _toConsumableArray(this.dataSource);\n        }\n      }\n    },\n    editOk: function editOk(formData, arr) {\n      if (arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].id == formData.id) {\n            arr[i] = formData;\n            break;\n          } else {\n            this.editOk(formData, arr[i].children);\n          }\n        }\n      }\n    },\n    addOk: function () {\n      var _addOk = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(formData, arr) {\n        var _iterator, _step, i;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (formData[this.pidField]) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.loadData();\n                _context.next = 22;\n                break;\n\n              case 4:\n                this.expandedRowKeys = [];\n                _iterator = _createForOfIteratorHelper(arr);\n                _context.prev = 6;\n\n                _iterator.s();\n\n              case 8:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 14;\n                  break;\n                }\n\n                i = _step.value;\n                _context.next = 12;\n                return this.expandTreeNode(i);\n\n              case 12:\n                _context.next = 8;\n                break;\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](6);\n\n                _iterator.e(_context.t0);\n\n              case 19:\n                _context.prev = 19;\n\n                _iterator.f();\n\n                return _context.finish(19);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 16, 19, 22]]);\n      }));\n\n      function addOk(_x, _x2) {\n        return _addOk.apply(this, arguments);\n      }\n\n      return addOk;\n    }(),\n    expandTreeNode: function expandTreeNode(nodeId) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5.getFormDataById(nodeId, _this5.dataSource);\n\n        var row = _this5.parentFormData;\n\n        _this5.expandedRowKeys.push(nodeId);\n\n        var params = _this5.getQueryParams(); //查询条件\n\n\n        params[_this5.pidField] = nodeId;\n        getAction(_this5.url.childList, params).then(function (res) {\n          if (res.success) {\n            if (res.result && res.result.length > 0) {\n              row.children = _this5.getDataByResult(res.result);\n              _this5.dataSource = _toConsumableArray(_this5.dataSource);\n              resolve();\n            } else {\n              reject();\n            }\n          } else {\n            reject();\n          }\n        });\n      });\n    },\n    getFormDataById: function getFormDataById(id, arr) {\n      if (arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].id == id) {\n            this.parentFormData = arr[i];\n          } else {\n            this.getFormDataById(id, arr[i].children);\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["TestDevList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    \r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\r\n      <a-button type=\"primary\" icon=\"download\" @click=\"handleExportXls('测试表生成')\">导出</a-button>\r\n      <a-upload name=\"file\" :showUploadList=\"false\" :multiple=\"false\" :headers=\"tokenHeader\" :action=\"importExcelUrl\" @change=\"handleImportExcel\">\r\n        <a-button type=\"primary\" icon=\"import\">导入</a-button>\r\n      </a-upload>\r\n      <a-dropdown v-if=\"selectedRowKeys.length > 0\">\r\n        <a-menu slot=\"overlay\">\r\n          <a-menu-item key=\"1\" @click=\"batchDel\"><a-icon type=\"delete\"/>删除</a-menu-item>\r\n        </a-menu>\r\n        <a-button style=\"margin-left: 8px\"> 批量操作 <a-icon type=\"down\" /></a-button>\r\n      </a-dropdown>\r\n    </div>\r\n\r\n    <!-- table区域-begin -->\r\n    <div>\r\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i> 已选择 <a style=\"font-weight: 600\">{{ selectedRowKeys.length }}</a>项\r\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n      </div>\r\n\r\n      <a-table\r\n        ref=\"table\"\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"ipagination\"\r\n        :loading=\"loading\"\r\n        :expandedRowKeys=\"expandedRowKeys\"\r\n        @change=\"handleTableChange\"\r\n        @expand=\"handleExpand\"\r\n        v-bind=\"tableProps\">\r\n        \r\n        <template slot=\"imgSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\r\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\r\n        </template>\r\n        <template slot=\"fileSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\r\n          <a-button\r\n            v-else\r\n            :ghost=\"true\"\r\n            type=\"primary\"\r\n            icon=\"download\"\r\n            size=\"small\"\r\n            @click=\"uploadFile(text)\">\r\n            下载\r\n          </a-button>\r\n        </template>\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click=\"handleEdit(record)\">编辑</a>\r\n\r\n          <a-divider type=\"vertical\" />\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">更多 <a-icon type=\"down\" /></a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item>\r\n                <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDelete(record.id)\">\r\n                  <a>删除</a>\r\n                </a-popconfirm>\r\n              </a-menu-item>\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n\r\n      </a-table>\r\n    </div>\r\n\r\n    <testDev-modal ref=\"modalForm\" @ok=\"modalFormOk\"></testDev-modal>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { getAction } from '@/api/manage'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import TestDevModal from './modules/TestDevModal'\r\n  import {filterMultiDictText} from '@/components/dict/JDictSelectUtil'\r\n  \r\n  export default {\r\n    name: \"TestDevList\",\r\n    mixins:[JeecgListMixin],\r\n    components: {\r\n      TestDevModal\r\n    },\r\n    data () {\r\n      return {\r\n        description: '测试表生成管理页面',\r\n        // 表头\r\n        columns: [\r\n          {\r\n            title:'创建人',\r\n            align:\"left\",\r\n            dataIndex: 'createBy'\r\n          },\r\n          {\r\n            title:'创建日期',\r\n            align:\"left\",\r\n            dataIndex: 'createTime'\r\n          },\r\n          {\r\n            title:'更新人',\r\n            align:\"left\",\r\n            dataIndex: 'updateBy'\r\n          },\r\n          {\r\n            title:'更新日期',\r\n            align:\"left\",\r\n            dataIndex: 'updateTime'\r\n          },\r\n          {\r\n            title:'所属部门',\r\n            align:\"left\",\r\n            dataIndex: 'sysOrgCode'\r\n          },\r\n          {\r\n            title:'名称',\r\n            align:\"left\",\r\n            dataIndex: 'name'\r\n          },\r\n          {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            align:\"center\",\r\n            scopedSlots: { customRender: 'action' },\r\n          }\r\n        ],\r\n        url: {\r\n          list: \"/demonstration/testDev/rootList\",\r\n          childList: \"/demonstration/testDev/childList\",\r\n          delete: \"/demonstration/testDev/delete\",\r\n          deleteBatch: \"/demonstration/testDev/deleteBatch\",\r\n          exportXlsUrl: \"/demonstration/testDev/exportXls\",\r\n          importExcelUrl: \"demonstration/testDev/importExcel\",\r\n        },\r\n        expandedRowKeys:[],\r\n        hasChildrenField:\"hasChild\",\r\n        pidField:\"pid\",\r\n        dictOptions: {}\r\n      }\r\n    },\r\n    computed: {\r\n      importExcelUrl(){\r\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\r\n      },\r\n      tableProps() {\r\n        let _this = this\r\n        return {\r\n          // 列表项是否可选择\r\n          rowSelection: {\r\n            selectedRowKeys: _this.selectedRowKeys,\r\n            onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      loadData(arg){\r\n        if(arg==1){\r\n          this.ipagination.current=1\r\n        }\r\n        this.loading = true\r\n        this.expandedRowKeys = []\r\n        let params = this.getQueryParams()\r\n        return new Promise((resolve) => {\r\n          getAction(this.url.list,params).then(res=>{\r\n            if(res.success){\r\n              let result = res.result\r\n              if(Number(result.total)>0){\r\n                this.ipagination.total = Number(result.total)\r\n                this.dataSource = this.getDataByResult(res.result.records)\r\n                resolve()\r\n              }else{\r\n                this.ipagination.total=0\r\n                this.dataSource=[]\r\n              }\r\n            }else{\r\n              this.$message.warning(res.message)\r\n            }\r\n            this.loading = false\r\n          })\r\n        })\r\n      },\r\n      getDataByResult(result){\r\n        return result.map(item=>{\r\n          //判断是否标记了带有子节点\r\n          if(item[this.hasChildrenField]=='1'){\r\n            let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\r\n            item.children = [loadChild]\r\n          }\r\n          return item\r\n        })\r\n      },\r\n      handleExpand(expanded, record){\r\n        // 判断是否是展开状态\r\n        if (expanded) {\r\n          this.expandedRowKeys.push(record.id)\r\n          if (record.children.length>0 && record.children[0].isLoading === true) {\r\n            let params = this.getQueryParams();//查询条件\r\n            params[this.pidField] = record.id\r\n            getAction(this.url.childList,params).then((res)=>{\r\n              if(res.success){\r\n                if(res.result && res.result.length>0){\r\n                  record.children = this.getDataByResult(res.result)\r\n                  this.dataSource = [...this.dataSource]\r\n                }else{\r\n                  record.children=''\r\n                  record.hasChildrenField='0'\r\n                }\r\n              }else{\r\n                this.$message.warning(res.message)\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          let keyIndex = this.expandedRowKeys.indexOf(record.id)\r\n          if(keyIndex>=0){\r\n            this.expandedRowKeys.splice(keyIndex, 1);\r\n          }\r\n        }\r\n      },\r\n      initDictConfig(){\r\n      },\r\n      modalFormOk(formData,arr){\r\n        if(!formData.id){\r\n          this.addOk(formData,arr)\r\n        }else{\r\n          if(!arr){\r\n            this.loadData()\r\n          }else{\r\n            this.editOk(formData,this.dataSource)\r\n            this.dataSource=[...this.dataSource]\r\n          }\r\n        }\r\n      },\r\n      editOk(formData,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==formData.id){\r\n              arr[i]=formData\r\n              break\r\n            }else{\r\n              this.editOk(formData,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      async addOk(formData,arr){\r\n        if(!formData[this.pidField]){\r\n          this.loadData()\r\n        }else{\r\n          this.expandedRowKeys=[]\r\n          for(let i of arr){\r\n            await this.expandTreeNode(i)\r\n          }\r\n        }\r\n      },\r\n      expandTreeNode(nodeId){\r\n        return new Promise((resolve,reject)=>{\r\n          this.getFormDataById(nodeId,this.dataSource)\r\n          let row = this.parentFormData\r\n          this.expandedRowKeys.push(nodeId)\r\n          let params = this.getQueryParams();//查询条件\r\n          params[this.pidField] = nodeId\r\n          getAction(this.url.childList,params).then((res)=>{\r\n            if(res.success){\r\n              if(res.result && res.result.length>0){\r\n                row.children = this.getDataByResult(res.result)\r\n                this.dataSource = [...this.dataSource]\r\n                resolve()\r\n              }else{\r\n                reject()\r\n              }\r\n            }else{\r\n              reject()\r\n            }\r\n          })\r\n        })\r\n      },\r\n      getFormDataById(id,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==id){\r\n              this.parentFormData = arr[i]\r\n            }else{\r\n              this.getFormDataById(id,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n       \r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>"],"sourceRoot":"src/views/demonstration"}]}