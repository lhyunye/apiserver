{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSuperQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSuperQuery.vue","mtime":1618453704898},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.parse-int\";\nimport _defineProperty from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as utils from '@/utils/util';\nimport JDate from '@/components/jeecg/JDate.vue';\nimport JSelectDepart from '@/components/jeecgbiz/JSelectDepart';\nimport JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser';\nexport default {\n  name: 'JSuperQuery',\n  components: {\n    JDate: JDate,\n    JSelectDepart: JSelectDepart,\n    JSelectMultiUser: JSelectMultiUser\n  },\n  props: {\n    /*\n     fieldList: [{\n        value:'',\n        text:'',\n        type:'',\n        dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\n     }]\n     type:date datetime int number string\n    * */\n    fieldList: {\n      type: Array,\n      required: true\n    },\n\n    /*\n    * 这个回调函数接收一个数组参数 即查询条件\n    * */\n    callback: {\n      type: String,\n      required: false,\n      default: 'handleSuperQuery'\n    },\n    // 当前是否在加载中\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    // 保存查询条件的唯一 code，通过该 code 区分\n    saveCode: {\n      type: String,\n      default: 'testSaveCode'\n    }\n  },\n  data: function data() {\n    var h = this.$createElement;\n    return {\n      fieldTreeData: [],\n      prompt: {\n        visible: false,\n        value: ''\n      },\n      visible: false,\n      queryParamsModel: [{}],\n      treeIcon: h(\"a-icon\", {\n        \"attrs\": {\n          \"type\": \"file-text\"\n        }\n      }),\n      treeData: [],\n      // 保存查询条件的前缀名\n      saveCodeBefore: 'JSuperQuerySaved_',\n      selectValue: 'and',\n      superQueryFlag: false\n    };\n  },\n  watch: {\n    // 当 saveCode 变化时，重新查询已保存的条件\n    saveCode: {\n      immediate: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        var list = this.$ls.get(this.saveCodeBefore + val);\n\n        if (list instanceof Array) {\n          this.treeData = list.map(function (item) {\n            item.icon = _this.treeIcon;\n            return item;\n          });\n        }\n      }\n    },\n    fieldList: {\n      deep: true,\n      immediate: true,\n      handler: function handler(val) {\n        var mainData = [],\n            subData = [];\n        val.forEach(function (item) {\n          var data = _objectSpread({}, item);\n\n          data.label = data.label || data.text;\n          var hasChildren = data.children instanceof Array;\n          data.disabled = hasChildren;\n          data.selectable = !hasChildren;\n\n          if (hasChildren) {\n            data.children = data.children.map(function (item2) {\n              var child = _objectSpread({}, item2);\n\n              child.label = child.label || child.text;\n              child.label = data.label + '-' + child.label;\n              child.value = data.value + ',' + child.value;\n              child.val = '';\n              return child;\n            });\n            data.val = '';\n            subData.push(data);\n          } else {\n            mainData.push(data);\n          }\n        });\n        this.fieldTreeData = mainData.concat(subData);\n      }\n    }\n  },\n  methods: {\n    show: function show() {\n      if (!this.queryParamsModel || this.queryParamsModel.length == 0) {\n        this.queryParamsModel = [{}];\n      }\n\n      this.visible = true;\n    },\n    handleOk: function handleOk() {\n      if (!this.isNullArray(this.queryParamsModel)) {\n        var event = {\n          matchType: this.selectValue,\n          params: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n        };\n        console.log('---高级查询参数--->', event);\n        this.emitCallback(event.params, event.matchType);\n      } else {\n        this.emitCallback();\n      }\n    },\n    emitCallback: function emitCallback(params, matchType) {\n      this.superQueryFlag = !!params;\n      this.$emit(this.callback, params, matchType);\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleAdd: function handleAdd() {\n      this.queryParamsModel.push({});\n    },\n    handleDel: function handleDel(index) {\n      this.queryParamsModel.splice(index, 1);\n    },\n    handleSelected: function handleSelected(node, item) {\n      var _node$dataRef = node.dataRef,\n          type = _node$dataRef.type,\n          options = _node$dataRef.options,\n          dictCode = _node$dataRef.dictCode,\n          dictTable = _node$dataRef.dictTable,\n          customReturnField = _node$dataRef.customReturnField;\n      item['type'] = type;\n      item['options'] = options;\n      item['dictCode'] = dictCode;\n      item['dictTable'] = dictTable;\n      item['customReturnField'] = customReturnField;\n      this.$set(item, 'val', undefined);\n    },\n    handleReset: function handleReset() {\n      this.superQueryFlag = false;\n      this.queryParamsModel = [{}];\n      this.emitCallback();\n    },\n    handleSave: function handleSave() {\n      var queryParams = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel));\n\n      if (this.isNullArray(queryParams)) {\n        this.$message.warning('空条件不能保存');\n      } else {\n        this.prompt.value = '';\n        this.prompt.visible = true;\n      }\n    },\n    handlePromptOk: function handlePromptOk() {\n      var _this2 = this;\n\n      var value = this.prompt.value; // 判断有没有重名\n\n      var filterList = this.treeData.filter(function (i) {\n        return i.title === value;\n      });\n\n      if (filterList.length > 0) {\n        this.$confirm({\n          content: \"\".concat(value, \" \\u5DF2\\u5B58\\u5728\\uFF0C\\u662F\\u5426\\u8986\\u76D6\\uFF1F\"),\n          onOk: function onOk() {\n            _this2.prompt.visible = false;\n            filterList[0].records = _this2.removeEmptyObject(utils.cloneObject(_this2.queryParamsModel));\n\n            _this2.saveToLocalStore();\n\n            _this2.$message.success('保存成功');\n          }\n        });\n      } else {\n        this.prompt.visible = false;\n        this.treeData.push({\n          title: value,\n          icon: this.treeIcon,\n          records: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\n        });\n        this.saveToLocalStore();\n        this.$message.success('保存成功');\n      }\n    },\n    handleTreeSelect: function handleTreeSelect(idx, event) {\n      if (event.selectedNodes[0]) {\n        this.queryParamsModel = utils.cloneObject(event.selectedNodes[0].data.props.records);\n      }\n    },\n    handleTreeRightClick: function handleTreeRightClick(args) {\n      var _this3 = this;\n\n      this.$confirm({\n        content: '是否删除当前查询？',\n        onOk: function onOk() {\n          var eventKey = args.node.eventKey;\n\n          _this3.treeData.splice(Number.parseInt(eventKey.substring(2)), 1);\n\n          _this3.saveToLocalStore();\n\n          _this3.$message.success('删除成功');\n        }\n      });\n    },\n    // 将查询保存到 LocalStore 里\n    saveToLocalStore: function saveToLocalStore() {\n      this.$ls.set(this.saveCodeBefore + this.saveCode, this.treeData.map(function (item) {\n        return {\n          title: item.title,\n          records: item.records\n        };\n      }));\n    },\n    isNullArray: function isNullArray(array) {\n      //判断是不是空数组对象\n      if (!array || array.length === 0) {\n        return true;\n      }\n\n      if (array.length === 1) {\n        var obj = array[0];\n\n        if (!obj.field || obj.val == null || obj.val === '' || !obj.rule) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    // 去掉数组中的空对象\n    removeEmptyObject: function removeEmptyObject(array) {\n      for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n\n        if (item == null || Object.keys(item).length <= 0) {\n          array.splice(i--, 1);\n        } else {\n          // 去掉特殊属性\n          delete item.options;\n        }\n      }\n\n      return array;\n    }\n  }\n};",{"version":3,"sources":["JSuperQuery.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div class=\"j-super-query-box\">\r\n\r\n  <div @click=\"visible=true\">\r\n    <slot>\r\n      <a-tooltip v-if=\"superQueryFlag\" :mouseLeaveDelay=\"0.2\">\r\n        <template slot=\"title\">\r\n          <span>已有高级查询条件生效</span>\r\n          <a-divider type=\"vertical\"/>\r\n          <a @click=\"handleReset\">清空</a>\r\n        </template>\r\n        <a-button type=\"primary\">\r\n          <a-icon type=\"appstore\" theme=\"twoTone\" :spin=\"true\"></a-icon>\r\n          <span>高级查询</span>\r\n        </a-button>\r\n      </a-tooltip>\r\n      <a-button v-else type=\"primary\" icon=\"filter\" @click=\"visible=true\">高级查询</a-button>\r\n    </slot>\r\n  </div>\r\n\r\n  <a-modal\r\n    title=\"高级查询构造器\"\r\n    :width=\"1000\"\r\n    :visible=\"visible\"\r\n    @cancel=\"handleCancel\"\r\n    :mask=\"false\"\r\n    class=\"j-super-query-modal\"\r\n    style=\"top:5%;max-height: 95%;\">\r\n\r\n    <template slot=\"footer\">\r\n      <div style=\"float: left\">\r\n        <a-button :loading=\"loading\" @click=\"handleReset\">重置</a-button>\r\n        <a-button :loading=\"loading\" @click=\"handleSave\">保存查询条件</a-button>\r\n      </div>\r\n      <a-button :loading=\"loading\" @click=\"handleCancel\">关闭</a-button>\r\n      <a-button :loading=\"loading\" type=\"primary\" @click=\"handleOk\">查询</a-button>\r\n    </template>\r\n\r\n    <a-spin :spinning=\"loading\">\r\n      <a-row>\r\n        <a-col :sm=\"24\" :md=\"24-5\">\r\n\r\n          <a-empty v-if=\"queryParamsModel.length === 0\">\r\n            <div slot=\"description\">\r\n              <span>没有任何查询条件</span>\r\n              <a-divider type=\"vertical\"/>\r\n              <a @click=\"handleAdd\">点击新增</a>\r\n            </div>\r\n          </a-empty>\r\n\r\n          <a-form v-else layout=\"inline\">\r\n\r\n            <a-form-item label=\"过滤条件匹配\" style=\"margin-bottom: 12px;\">\r\n              <a-select v-model=\"selectValue\" :getPopupContainer=\"node=>node.parentNode\">\r\n                <a-select-option value=\"and\">AND（所有条件都要求匹配）</a-select-option>\r\n                <a-select-option value=\"or\">OR（条件中的任意一个匹配）</a-select-option>\r\n              </a-select>\r\n            </a-form-item>\r\n\r\n            <a-row type=\"flex\" style=\"margin-bottom:10px\" :gutter=\"16\" v-for=\"(item, index) in queryParamsModel\" :key=\"index\">\r\n\r\n              <a-col :span=\"8\">\r\n                <a-tree-select\r\n                  showSearch\r\n                  v-model=\"item.field\"\r\n                  :treeData=\"fieldTreeData\"\r\n                  :dropdownStyle=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n                  placeholder=\"选择查询字段\"\r\n                  allowClear\r\n                  treeDefaultExpandAll\r\n                  :getPopupContainer=\"node=>node.parentNode\"\r\n                  style=\"width: 100%\"\r\n                  @select=\"(val,option)=>handleSelected(option,item)\"\r\n                >\r\n                </a-tree-select>\r\n              </a-col>\r\n\r\n              <a-col :span=\"4\">\r\n                <a-select placeholder=\"匹配规则\" v-model=\"item.rule\" :getPopupContainer=\"node=>node.parentNode\">\r\n                  <a-select-option value=\"eq\">等于</a-select-option>\r\n                  <a-select-option value=\"ne\">不等于</a-select-option>\r\n                  <a-select-option value=\"gt\">大于</a-select-option>\r\n                  <a-select-option value=\"ge\">大于等于</a-select-option>\r\n                  <a-select-option value=\"lt\">小于</a-select-option>\r\n                  <a-select-option value=\"le\">小于等于</a-select-option>\r\n                  <a-select-option value=\"right_like\">以..开始</a-select-option>\r\n                  <a-select-option value=\"left_like\">以..结尾</a-select-option>\r\n                  <a-select-option value=\"like\">包含</a-select-option>\r\n                  <a-select-option value=\"in\">在...中</a-select-option>\r\n                </a-select>\r\n              </a-col>\r\n\r\n              <a-col :span=\"8\">\r\n                <template v-if=\"item.dictCode\">\r\n                  <template v-if=\"item.type === 'table-dict'\">\r\n                    <j-popup\r\n                      v-model=\"item.val\"\r\n                      :code=\"item.dictTable\"\r\n                      :field=\"item.dictCode\"\r\n                      :orgFields=\"item.dictCode\"\r\n                      :destFields=\"item.dictCode\"\r\n                    ></j-popup>\r\n                  </template>\r\n                  <j-dict-select-tag v-else v-model=\"item.val\" :dictCode=\"item.dictCode\" placeholder=\"请选择\"/>\r\n                </template>\r\n                <j-select-multi-user\r\n                  v-else-if=\"item.type === 'select-user'\"\r\n                  v-model=\"item.val\"\r\n                  :buttons=\"false\"\r\n                  :multiple=\"false\"\r\n                  placeholder=\"请选择用户\"\r\n                  :returnKeys=\"['id', item.customReturnField || 'username']\"\r\n                />\r\n                <j-select-depart\r\n                  v-else-if=\"item.type === 'select-depart'\"\r\n                  v-model=\"item.val\"\r\n                  :multi=\"false\"\r\n                  placeholder=\"请选择部门\"\r\n                  :customReturnField=\"item.customReturnField || 'id'\"\r\n                />\r\n                <a-select v-else-if=\"item.options instanceof Array\" v-model=\"item.val\" :options=\"item.options\" allowClear placeholder=\"请选择\"/>\r\n                <j-date v-else-if=\" item.type=='date' \" v-model=\"item.val\" placeholder=\"请选择日期\" style=\"width: 100%\"></j-date>\r\n                <j-date v-else-if=\" item.type=='datetime' \" v-model=\"item.val\" placeholder=\"请选择时间\" :show-time=\"true\" date-format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\"></j-date>\r\n                <a-input-number v-else-if=\" item.type=='int'||item.type=='number' \" style=\"width: 100%\" placeholder=\"请输入数值\" v-model=\"item.val\"/>\r\n                <a-input v-else v-model=\"item.val\" placeholder=\"请输入值\"/>\r\n              </a-col>\r\n\r\n              <a-col :span=\"4\">\r\n                <a-button @click=\"handleAdd\" icon=\"plus\"></a-button>&nbsp;\r\n                <a-button @click=\"handleDel( index )\" icon=\"minus\"></a-button>\r\n              </a-col>\r\n\r\n            </a-row>\r\n\r\n          </a-form>\r\n        </a-col>\r\n        <a-col :sm=\"24\" :md=\"5\">\r\n          <!-- 查询记录 -->\r\n\r\n          <a-card class=\"j-super-query-history-card\" :bordered=\"true\">\r\n            <div slot=\"title\">\r\n              保存的查询\r\n            </div>\r\n\r\n            <a-empty v-if=\"treeData.length === 0\" class=\"j-super-query-history-empty\" description=\"没有保存任何查询\"/>\r\n            <a-tree\r\n              v-else\r\n              class=\"j-super-query-history-tree\"\r\n              showIcon\r\n              :treeData=\"treeData\"\r\n              @select=\"handleTreeSelect\"\r\n              @rightClick=\"handleTreeRightClick\"\r\n            >\r\n            </a-tree>\r\n          </a-card>\r\n\r\n\r\n        </a-col>\r\n      </a-row>\r\n\r\n\r\n    </a-spin>\r\n\r\n    <a-modal title=\"请输入保存的名称\" :visible=\"prompt.visible\" @cancel=\"prompt.visible=false\" @ok=\"handlePromptOk\">\r\n      <a-input v-model=\"prompt.value\"></a-input>\r\n    </a-modal>\r\n\r\n  </a-modal>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import * as utils from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate.vue'\r\n  import JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\r\n  import JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\r\n\r\n  export default {\r\n    name: 'JSuperQuery',\r\n    components: { JDate, JSelectDepart, JSelectMultiUser },\r\n    props: {\r\n      /*\r\n       fieldList: [{\r\n          value:'',\r\n          text:'',\r\n          type:'',\r\n          dictCode:'' // 只要 dictCode 有值，无论 type 是什么，都显示为字典下拉框\r\n       }]\r\n       type:date datetime int number string\r\n      * */\r\n      fieldList: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      /*\r\n      * 这个回调函数接收一个数组参数 即查询条件\r\n      * */\r\n      callback: {\r\n        type: String,\r\n        required: false,\r\n        default: 'handleSuperQuery'\r\n      },\r\n\r\n      // 当前是否在加载中\r\n      loading: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n\r\n      // 保存查询条件的唯一 code，通过该 code 区分\r\n      saveCode: {\r\n        type: String,\r\n        default: 'testSaveCode'\r\n      }\r\n\r\n    },\r\n    data() {\r\n      return {\r\n        fieldTreeData: [],\r\n\r\n        prompt: {\r\n          visible: false,\r\n          value: ''\r\n        },\r\n\r\n        visible: false,\r\n        queryParamsModel: [{}],\r\n        treeIcon: <a-icon type=\"file-text\"/>,\r\n        treeData: [],\r\n        // 保存查询条件的前缀名\r\n        saveCodeBefore: 'JSuperQuerySaved_',\r\n        selectValue: 'and',\r\n        superQueryFlag: false\r\n      }\r\n    },\r\n    watch: {\r\n      // 当 saveCode 变化时，重新查询已保存的条件\r\n      saveCode: {\r\n        immediate: true,\r\n        handler(val) {\r\n          let list = this.$ls.get(this.saveCodeBefore + val)\r\n          if (list instanceof Array) {\r\n            this.treeData = list.map(item => {\r\n              item.icon = this.treeIcon\r\n              return item\r\n            })\r\n          }\r\n        }\r\n      },\r\n      fieldList: {\r\n        deep: true,\r\n        immediate: true,\r\n        handler(val) {\r\n          let mainData = [], subData = []\r\n          val.forEach(item => {\r\n            let data = { ...item }\r\n            data.label = data.label || data.text\r\n            let hasChildren = (data.children instanceof Array)\r\n            data.disabled = hasChildren\r\n            data.selectable = !hasChildren\r\n            if (hasChildren) {\r\n              data.children = data.children.map(item2 => {\r\n                let child = { ...item2 }\r\n                child.label = child.label || child.text\r\n                child.label = data.label + '-' + child.label\r\n                child.value = data.value + ',' + child.value\r\n                child.val = ''\r\n                return child\r\n              })\r\n              data.val = ''\r\n              subData.push(data)\r\n            } else {\r\n              mainData.push(data)\r\n            }\r\n          })\r\n          this.fieldTreeData = mainData.concat(subData)\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      show() {\r\n        if (!this.queryParamsModel || this.queryParamsModel.length == 0) {\r\n          this.queryParamsModel = [{}]\r\n        }\r\n        this.visible = true\r\n      },\r\n      handleOk() {\r\n        if (!this.isNullArray(this.queryParamsModel)) {\r\n          let event = {\r\n            matchType: this.selectValue,\r\n            params: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n          }\r\n          console.log('---高级查询参数--->', event)\r\n          this.emitCallback(event.params, event.matchType)\r\n        } else {\r\n          this.emitCallback()\r\n        }\r\n      },\r\n      emitCallback(params, matchType) {\r\n        this.superQueryFlag = !!params\r\n        this.$emit(this.callback, params, matchType)\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleAdd() {\r\n        this.queryParamsModel.push({})\r\n      },\r\n      handleDel(index) {\r\n        this.queryParamsModel.splice(index, 1)\r\n      },\r\n      handleSelected(node, item) {\r\n        let { type, options, dictCode, dictTable, customReturnField } = node.dataRef\r\n        item['type'] = type\r\n        item['options'] = options\r\n        item['dictCode'] = dictCode\r\n        item['dictTable'] = dictTable\r\n        item['customReturnField'] = customReturnField\r\n        this.$set(item, 'val', undefined)\r\n      },\r\n      handleReset() {\r\n        this.superQueryFlag = false\r\n        this.queryParamsModel = [{}]\r\n        this.emitCallback()\r\n      },\r\n      handleSave() {\r\n        let queryParams = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n        if (this.isNullArray(queryParams)) {\r\n          this.$message.warning('空条件不能保存')\r\n        } else {\r\n          this.prompt.value = ''\r\n          this.prompt.visible = true\r\n        }\r\n      },\r\n      handlePromptOk() {\r\n\r\n        let { value } = this.prompt\r\n        // 判断有没有重名\r\n\r\n        let filterList = this.treeData.filter(i => i.title === value)\r\n        if (filterList.length > 0) {\r\n          this.$confirm({\r\n            content: `${value} 已存在，是否覆盖？`,\r\n            onOk: () => {\r\n              this.prompt.visible = false\r\n              filterList[0].records = this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n              this.saveToLocalStore()\r\n              this.$message.success('保存成功')\r\n            }\r\n          })\r\n        } else {\r\n          this.prompt.visible = false\r\n          this.treeData.push({\r\n            title: value,\r\n            icon: this.treeIcon,\r\n            records: this.removeEmptyObject(utils.cloneObject(this.queryParamsModel))\r\n          })\r\n          this.saveToLocalStore()\r\n          this.$message.success('保存成功')\r\n        }\r\n\r\n\r\n      },\r\n      handleTreeSelect(idx, event) {\r\n        if (event.selectedNodes[0]) {\r\n          this.queryParamsModel = utils.cloneObject(event.selectedNodes[0].data.props.records)\r\n        }\r\n      },\r\n      handleTreeRightClick(args) {\r\n        this.$confirm({\r\n          content: '是否删除当前查询？',\r\n          onOk: () => {\r\n            let { node: { eventKey } } = args\r\n            this.treeData.splice(Number.parseInt(eventKey.substring(2)), 1)\r\n            this.saveToLocalStore()\r\n            this.$message.success('删除成功')\r\n          },\r\n        })\r\n      },\r\n\r\n      // 将查询保存到 LocalStore 里\r\n      saveToLocalStore() {\r\n        this.$ls.set(this.saveCodeBefore + this.saveCode, this.treeData.map(item => {\r\n          return { title: item.title, records: item.records }\r\n        }))\r\n      },\r\n\r\n      isNullArray(array) {\r\n        //判断是不是空数组对象\r\n        if (!array || array.length === 0) {\r\n          return true\r\n        }\r\n        if (array.length === 1) {\r\n          let obj = array[0]\r\n          if (!obj.field || (obj.val == null || obj.val === '') || !obj.rule) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      },\r\n      // 去掉数组中的空对象\r\n      removeEmptyObject(array) {\r\n        for (let i = 0; i < array.length; i++) {\r\n          let item = array[i]\r\n          if (item == null || Object.keys(item).length <= 0) {\r\n            array.splice(i--, 1)\r\n          } else {\r\n            // 去掉特殊属性\r\n            delete item.options\r\n          }\r\n        }\r\n        return array\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .j-super-query-box {\r\n    display: inline-block;\r\n  }\r\n\r\n  .j-super-query-modal {\r\n\r\n    .j-super-query-history-card /deep/ {\r\n      .ant-card-body,\r\n      .ant-card-head-title {\r\n        padding: 0;\r\n      }\r\n\r\n      .ant-card-head {\r\n        padding: 4px 8px;\r\n        min-height: initial;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-empty /deep/ {\r\n      .ant-empty-image {\r\n        height: 80px;\r\n        line-height: 80px;\r\n        margin-bottom: 0;\r\n      }\r\n\r\n      img {\r\n        width: 80px;\r\n        height: 65px;\r\n      }\r\n\r\n      .ant-empty-description {\r\n        color: #afafaf;\r\n        margin: 8px 0;\r\n      }\r\n    }\r\n\r\n    .j-super-query-history-tree /deep/ {\r\n      .ant-tree-switcher {\r\n        display: none;\r\n      }\r\n\r\n      .ant-tree-node-content-wrapper {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg"}]}