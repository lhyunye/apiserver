{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue","mtime":1618453704903},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport { cloneObject, pushIfNotExist } from '@/utils/util';\nexport default {\n  name: 'JSelectBizComponentModal',\n  mixins: [JeecgListMixin],\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    valueKey: {\n      type: String,\n      required: true\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    width: {\n      type: Number,\n      default: 900\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    listUrl: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    // 根据 value 获取显示文本的地址，例如存的是 username，可以通过该地址获取到 realname\n    valueUrl: {\n      type: String,\n      default: ''\n    },\n    displayKey: {\n      type: String,\n      default: null\n    },\n    columns: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 查询条件Code\n    queryParamCode: {\n      type: String,\n      default: null\n    },\n    // 查询条件文字\n    queryParamText: {\n      type: String,\n      default: null\n    },\n    rowKey: {\n      type: String,\n      default: 'id'\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: [],\n      // 表头\n      innerColumns: this.columns,\n      // 已选择列表\n      selectedTable: {\n        pagination: false,\n        scroll: {\n          y: 240\n        },\n        columns: [_objectSpread(_objectSpread({}, this.columns[0]), {}, {\n          width: this.columns[0].widthRight || this.columns[0].width\n        }), {\n          title: '操作',\n          dataIndex: 'action',\n          align: 'center',\n          width: 60,\n          scopedSlots: {\n            customRender: 'action'\n          }\n        }],\n        dataSource: []\n      },\n      url: {\n        list: this.listUrl\n      },\n\n      /* 分页参数 */\n      ipagination: {\n        current: 1,\n        pageSize: 5,\n        pageSizeOptions: ['5', '10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      options: [],\n      dataSourceMap: {}\n    };\n  },\n  watch: {\n    value: {\n      deep: true,\n      immediate: true,\n      handler: function handler(val) {\n        this.innerValue = cloneObject(val);\n        this.selectedRowKeys = [];\n        this.valueWatchHandler(val);\n        this.queryOptionsByValue(val);\n      }\n    },\n    dataSource: {\n      deep: true,\n      handler: function handler(val) {\n        this.emitOptions(val);\n        this.valueWatchHandler(this.innerValue);\n      }\n    },\n    selectedRowKeys: {\n      immediate: true,\n      deep: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        this.selectedTable.dataSource = val.map(function (key) {\n          var _iterator = _createForOfIteratorHelper(_this.dataSource),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var data = _step.value;\n\n              if (data[_this.rowKey] === key) {\n                pushIfNotExist(_this.innerValue, data[_this.valueKey]);\n                return data;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(_this.selectedTable.dataSource),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _data = _step2.value;\n\n              if (_data[_this.rowKey] === key) {\n                pushIfNotExist(_this.innerValue, _data[_this.valueKey]);\n                return _data;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          console.warn('未找到选择的行信息，key：' + key);\n          return {};\n        });\n      }\n    }\n  },\n  methods: {\n    /** 关闭弹窗 */\n    close: function close() {\n      this.$emit('update:visible', false);\n    },\n    valueWatchHandler: function valueWatchHandler(val) {\n      var _this2 = this;\n\n      val.forEach(function (item) {\n        _this2.dataSource.concat(_this2.selectedTable.dataSource).forEach(function (data) {\n          if (data[_this2.valueKey] === item) {\n            pushIfNotExist(_this2.selectedRowKeys, data[_this2.rowKey]);\n          }\n        });\n      });\n    },\n    queryOptionsByValue: function queryOptionsByValue(value) {\n      var _getAction,\n          _this3 = this;\n\n      if (!value || value.length === 0) {\n        return;\n      } // 判断options是否存在value，如果已存在数据就不再请求后台了\n\n\n      var notExist = false;\n\n      var _iterator3 = _createForOfIteratorHelper(value),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var val = _step3.value;\n          var find = false;\n\n          var _iterator4 = _createForOfIteratorHelper(this.options),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var option = _step4.value;\n\n              if (val === option.value) {\n                find = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          if (!find) {\n            notExist = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (!notExist) return;\n      getAction(this.valueUrl || this.listUrl, (_getAction = {}, _defineProperty(_getAction, this.valueKey, value.join(',') + ','), _defineProperty(_getAction, \"pageNo\", 1), _defineProperty(_getAction, \"pageSize\", value.length), _getAction)).then(function (res) {\n        if (res.success) {\n          var dataSource = res.result;\n\n          if (!(dataSource instanceof Array)) {\n            dataSource = res.result.records;\n          }\n\n          _this3.emitOptions(dataSource, function (data) {\n            pushIfNotExist(_this3.innerValue, data[_this3.valueKey]);\n            pushIfNotExist(_this3.selectedRowKeys, data[_this3.rowKey]);\n            pushIfNotExist(_this3.selectedTable.dataSource, data, _this3.rowKey);\n          });\n        }\n      });\n    },\n    emitOptions: function emitOptions(dataSource, callback) {\n      var _this4 = this;\n\n      dataSource.forEach(function (data) {\n        var key = data[_this4.valueKey];\n        _this4.dataSourceMap[key] = data;\n        pushIfNotExist(_this4.options, {\n          label: data[_this4.displayKey || _this4.valueKey],\n          value: key\n        }, 'value');\n        typeof callback === 'function' ? callback(data) : '';\n      });\n      this.$emit('options', this.options, this.dataSourceMap);\n    },\n\n    /** 完成选择 */\n    handleOk: function handleOk() {\n      var _this5 = this;\n\n      var value = this.selectedTable.dataSource.map(function (data) {\n        return data[_this5.valueKey];\n      });\n      this.$emit('input', value);\n      this.close();\n    },\n\n    /** 删除已选择的 */\n    handleDeleteSelected: function handleDeleteSelected(record, index) {\n      this.selectedRowKeys.splice(this.selectedRowKeys.indexOf(record[this.rowKey]), 1);\n      this.selectedTable.dataSource.splice(index, 1);\n    },\n    customRowFn: function customRowFn(record) {\n      var _this6 = this;\n\n      return {\n        on: {\n          click: function click() {\n            var key = record[_this6.rowKey];\n\n            if (!_this6.multiple) {\n              _this6.selectedRowKeys = [key];\n              _this6.selectedTable.dataSource = [record];\n            } else {\n              var index = _this6.selectedRowKeys.indexOf(key);\n\n              if (index === -1) {\n                _this6.selectedRowKeys.push(key);\n\n                _this6.selectedTable.dataSource.push(record);\n              } else {\n                _this6.handleDeleteSelected(record, index);\n              }\n            }\n          }\n        }\n      };\n    }\n  }\n};",{"version":3,"sources":["JSelectBizComponentModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    centered\r\n    :title=\"name + '选择'\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"close\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-row :gutter=\"18\">\r\n      <a-col :span=\"16\">\r\n        <!-- 查询区域 -->\r\n        <div class=\"table-page-search-wrapper\">\r\n          <a-form layout=\"inline\">\r\n            <a-row :gutter=\"24\">\r\n\r\n              <a-col :span=\"14\">\r\n                <a-form-item :label=\"(queryParamText||name)\">\r\n                  <a-input v-model=\"queryParam[queryParamCode||valueKey]\" :placeholder=\"'请输入' + (queryParamText||name)\" @pressEnter=\"searchQuery\"/>\r\n                </a-form-item>\r\n              </a-col>\r\n              <a-col :span=\"8\">\r\n                  <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n                    <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n                    <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n                  </span>\r\n              </a-col>\r\n\r\n            </a-row>\r\n          </a-form>\r\n        </div>\r\n\r\n        <a-table\r\n          size=\"small\"\r\n          bordered\r\n          :rowKey=\"rowKey\"\r\n          :columns=\"innerColumns\"\r\n          :dataSource=\"dataSource\"\r\n          :pagination=\"ipagination\"\r\n          :loading=\"loading\"\r\n          :scroll=\"{ y: 240 }\"\r\n          :rowSelection=\"{selectedRowKeys, onChange: onSelectChange, type: multiple ? 'checkbox':'radio'}\"\r\n          :customRow=\"customRowFn\"\r\n          @change=\"handleTableChange\">\r\n        </a-table>\r\n\r\n      </a-col>\r\n      <a-col :span=\"8\">\r\n        <a-card :title=\"'已选' + name\" :bordered=\"false\" :head-style=\"{padding:0}\" :body-style=\"{padding:0}\">\r\n\r\n          <a-table size=\"small\" :rowKey=\"rowKey\" bordered v-bind=\"selectedTable\">\r\n              <span slot=\"action\" slot-scope=\"text, record, index\">\r\n                <a @click=\"handleDeleteSelected(record, index)\">删除</a>\r\n              </span>\r\n          </a-table>\r\n\r\n        </a-card>\r\n      </a-col>\r\n    </a-row>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import { cloneObject, pushIfNotExist } from '@/utils/util'\r\n\r\n  export default {\r\n    name: 'JSelectBizComponentModal',\r\n    mixins: [JeecgListMixin],\r\n    props: {\r\n      value: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      visible: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      valueKey: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      multiple: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 900\r\n      },\r\n\r\n      name: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      listUrl: {\r\n        type: String,\r\n        required: true,\r\n        default: ''\r\n      },\r\n      // 根据 value 获取显示文本的地址，例如存的是 username，可以通过该地址获取到 realname\r\n      valueUrl: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      displayKey: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      columns: {\r\n        type: Array,\r\n        required: true,\r\n        default: () => []\r\n      },\r\n      // 查询条件Code\r\n      queryParamCode: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // 查询条件文字\r\n      queryParamText: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      rowKey: {\r\n        type: String,\r\n        default: 'id'\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        innerValue: [],\r\n        // 表头\r\n        innerColumns: this.columns,\r\n        // 已选择列表\r\n        selectedTable: {\r\n          pagination: false,\r\n          scroll: { y: 240 },\r\n          columns: [\r\n            {\r\n              ...this.columns[0],\r\n              width: this.columns[0].widthRight || this.columns[0].width,\r\n            },\r\n            { title: '操作', dataIndex: 'action', align: 'center', width: 60, scopedSlots: { customRender: 'action' }, }\r\n          ],\r\n          dataSource: [],\r\n        },\r\n        url: { list: this.listUrl },\r\n        /* 分页参数 */\r\n        ipagination: {\r\n          current: 1,\r\n          pageSize: 5,\r\n          pageSizeOptions: ['5', '10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        options: [],\r\n        dataSourceMap: {},\r\n      }\r\n    },\r\n    watch: {\r\n      value: {\r\n        deep: true,\r\n        immediate: true,\r\n        handler(val) {\r\n          this.innerValue = cloneObject(val)\r\n          this.selectedRowKeys = []\r\n          this.valueWatchHandler(val)\r\n          this.queryOptionsByValue(val)\r\n        }\r\n      },\r\n      dataSource: {\r\n        deep: true,\r\n        handler(val) {\r\n          this.emitOptions(val)\r\n          this.valueWatchHandler(this.innerValue)\r\n        }\r\n      },\r\n      selectedRowKeys: {\r\n        immediate: true,\r\n        deep: true,\r\n        handler(val) {\r\n          this.selectedTable.dataSource = val.map(key => {\r\n            for (let data of this.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            for (let data of this.selectedTable.dataSource) {\r\n              if (data[this.rowKey] === key) {\r\n                pushIfNotExist(this.innerValue, data[this.valueKey])\r\n                return data\r\n              }\r\n            }\r\n            console.warn('未找到选择的行信息，key：' + key)\r\n            return {}\r\n          })\r\n        },\r\n      }\r\n    },\r\n\r\n    methods: {\r\n\r\n      /** 关闭弹窗 */\r\n      close() {\r\n        this.$emit('update:visible', false)\r\n      },\r\n\r\n      valueWatchHandler(val) {\r\n        val.forEach(item => {\r\n          this.dataSource.concat(this.selectedTable.dataSource).forEach(data => {\r\n            if (data[this.valueKey] === item) {\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n            }\r\n          })\r\n        })\r\n      },\r\n\r\n      queryOptionsByValue(value) {\r\n        if (!value || value.length === 0) {\r\n          return\r\n        }\r\n        // 判断options是否存在value，如果已存在数据就不再请求后台了\r\n        let notExist = false\r\n        for (let val of value) {\r\n          let find = false\r\n          for (let option of this.options) {\r\n            if (val === option.value) {\r\n              find = true\r\n              break\r\n            }\r\n          }\r\n          if (!find) {\r\n            notExist = true\r\n            break\r\n          }\r\n        }\r\n        if (!notExist) return\r\n        getAction(this.valueUrl || this.listUrl, {\r\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\r\n          [this.valueKey]: value.join(',') + ',',\r\n          pageNo: 1,\r\n          pageSize: value.length\r\n        }).then((res) => {\r\n          if (res.success) {\r\n            let dataSource = res.result\r\n            if (!(dataSource instanceof Array)) {\r\n              dataSource = res.result.records\r\n            }\r\n            this.emitOptions(dataSource, (data) => {\r\n              pushIfNotExist(this.innerValue, data[this.valueKey])\r\n              pushIfNotExist(this.selectedRowKeys, data[this.rowKey])\r\n              pushIfNotExist(this.selectedTable.dataSource, data, this.rowKey)\r\n            })\r\n          }\r\n        })\r\n      },\r\n\r\n      emitOptions(dataSource, callback) {\r\n        dataSource.forEach(data => {\r\n          let key = data[this.valueKey]\r\n          this.dataSourceMap[key] = data\r\n          pushIfNotExist(this.options, { label: data[this.displayKey || this.valueKey], value: key }, 'value')\r\n          typeof callback === 'function' ? callback(data) : ''\r\n        })\r\n        this.$emit('options', this.options, this.dataSourceMap)\r\n      },\r\n\r\n      /** 完成选择 */\r\n      handleOk() {\r\n        let value = this.selectedTable.dataSource.map(data => data[this.valueKey])\r\n        this.$emit('input', value)\r\n        this.close()\r\n      },\r\n\r\n      /** 删除已选择的 */\r\n      handleDeleteSelected(record, index) {\r\n        this.selectedRowKeys.splice(this.selectedRowKeys.indexOf(record[this.rowKey]), 1)\r\n        this.selectedTable.dataSource.splice(index, 1)\r\n      },\r\n\r\n      customRowFn(record) {\r\n        return {\r\n          on: {\r\n            click: () => {\r\n              let key = record[this.rowKey]\r\n              if (!this.multiple) {\r\n                this.selectedRowKeys = [key]\r\n                this.selectedTable.dataSource = [record]\r\n              } else {\r\n                let index = this.selectedRowKeys.indexOf(key)\r\n                if (index === -1) {\r\n                  this.selectedRowKeys.push(key)\r\n                  this.selectedTable.dataSource.push(record)\r\n                } else {\r\n                  this.handleDeleteSelected(record, index)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>"],"sourceRoot":"src/components/jeecgbiz/JSelectBizComponent"}]}