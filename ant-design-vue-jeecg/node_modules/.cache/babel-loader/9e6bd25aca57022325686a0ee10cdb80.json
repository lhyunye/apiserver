{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgform\\auto\\ButtonExpHandler.js","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\modules\\online\\cgform\\auto\\ButtonExpHandler.js","mtime":1618453704978},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1605147255423},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1605147242017}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _classCallCheck from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * online 自定义按钮表达式处理类\r\n */\nvar ButtonExpHandler = /*#__PURE__*/function () {\n  /**\r\n   * 构造器\r\n   * @param express\r\n   */\n  function ButtonExpHandler(express, record) {\n    _classCallCheck(this, ButtonExpHandler);\n\n    this._express = express;\n    this._record = record;\n  }\n\n  _createClass(ButtonExpHandler, [{\n    key: \"show\",\n    get: function get() {\n      if (!this._express || this._express == '') {\n        return true;\n      }\n\n      var arr = this._express.split('#'); //获取字段值\n\n\n      var fieldValue = this._record[arr[0]]; //获取表达式\n\n      var exp = arr[1].toLowerCase(); //判断表达式\n\n      if (exp === 'eq') {\n        return fieldValue == arr[2];\n      } else if (exp === 'ne') {\n        return !(fieldValue == arr[2]);\n      } else if (exp === 'empty') {\n        if (arr[2] === 'true' || arr[2] === true) {\n          return !fieldValue || fieldValue == '';\n        } else {\n          return fieldValue && fieldValue.length > 0;\n        }\n      } else if (exp === 'in') {\n        var arr2 = arr[2].split(',');\n        return arr2.indexOf(String(fieldValue)) >= 0;\n      }\n\n      return false;\n    }\n  }]);\n\n  return ButtonExpHandler;\n}();\n\nexport { ButtonExpHandler as default };",null]}