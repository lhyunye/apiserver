{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleUserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleUserModal.vue","mtime":1618453705008},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1605147255423},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: 'DeptRoleUserModal',\n  components: {\n    JEllipsis: JEllipsis\n  },\n  data: function data() {\n    return {\n      currentDeptId: \"\",\n      title: \"部门角色分配\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n        getDeptRoleList: \"/sys/sysDepartRole/getDeptRoleList\",\n        getDeptRoleByUserId: \"/sys/sysDepartRole/getDeptRoleByUserId\"\n      },\n      designNameOption: [],\n      userId: \"\",\n      newRoleId: \"\",\n      oldRoleId: \"\",\n      designNameValue: [],\n      desformList: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(record, departId) {\n      this.userId = record.id;\n      this.currentDeptId = departId;\n      this.loadDesformList();\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      getAction(this.url.getDeptRoleByUserId, {\n        userId: this.userId\n      }).then(function (res) {\n        if (res.success) {\n          var designName = [];\n\n          var _iterator = _createForOfIteratorHelper(res.result),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n              designName.push(value.droleId);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          _this.oldRoleId = designName.join(\",\");\n          _this.designNameValue = designName;\n          _this.newRoleId = designName.join(\",\");\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this; // 触发表单验证\n\n      that.confirmLoading = true;\n      var httpurl = this.url.add;\n      var method = 'post';\n      var formData = Object.assign(this.model, {}); //时间格式化\n\n      formData.userId = this.userId;\n      formData.newRoleId = this.newRoleId;\n      formData.oldRoleId = this.oldRoleId;\n      httpAction(httpurl, formData, method).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('reload');\n          that.$emit('ok');\n        } else {\n          that.$message.warning(res.message);\n        }\n      }).finally(function () {\n        that.confirmLoading = false;\n        that.close();\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.designNameOption = [];\n      this.designNameValue = [];\n      this.close();\n    },\n    designNameChange: function designNameChange(selectedValue) {\n      this.newRoleId = selectedValue.join(\",\");\n    },\n    checkALL: function checkALL() {\n      var designName = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.desformList),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var value = _step2.value;\n          designName.push(value.id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.designNameValue = designName;\n      this.newRoleId = designName.join(\",\");\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.designNameValue = [];\n      this.newRoleId = \"\";\n    },\n\n    /** 加载desform */\n    loadDesformList: function loadDesformList() {\n      var _this2 = this;\n\n      getAction(this.url.getDeptRoleList, {\n        departId: this.currentDeptId\n      }).then(function (res) {\n        if (res.success) {\n          _this2.desformList = res.result;\n          var designName = [];\n\n          var _iterator3 = _createForOfIteratorHelper(_this2.desformList),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var value = _step3.value;\n              designName.push({\n                value: value.id,\n                text: value.roleName\n              });\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          _this2.designNameOption = designName;\n        }\n      });\n    }\n  }\n};",null]}