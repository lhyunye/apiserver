{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue","mtime":1618453704886},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DataSet } from '@antv/data-set';\nimport { ChartEventMixins } from \"./mixins/ChartMixins\";\nexport default {\n  name: 'BarMultid',\n  mixins: [ChartEventMixins],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'Jeecg',\n          'Jan.': 18.9,\n          'Feb.': 28.8,\n          'Mar.': 39.3,\n          'Apr.': 81.4,\n          'May': 47,\n          'Jun.': 20.3,\n          'Jul.': 24,\n          'Aug.': 35.6\n        }, {\n          type: 'Jeebt',\n          'Jan.': 12.4,\n          'Feb.': 23.2,\n          'Mar.': 34.5,\n          'Apr.': 99.7,\n          'May': 52.6,\n          'Jun.': 35.5,\n          'Jul.': 37.4,\n          'Aug.': 42.4\n        }];\n      }\n    },\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.'];\n      }\n    },\n    // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n    aliases: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 254\n    }\n  },\n  data: function data() {\n    return {\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }]\n    };\n  },\n  computed: {\n    data: function data() {\n      var _this = this;\n\n      var dv = new DataSet.View().source(this.dataSource);\n      dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'x',\n        value: 'y'\n      }); // bar 使用不了 - 和 / 所以替换下\n\n      var rows = dv.rows.map(function (row) {\n        if (typeof row.x === 'string') {\n          row.x = row.x.replace(/[-/]/g, '_');\n        }\n\n        return row;\n      }); // 替换别名\n\n      rows.forEach(function (row) {\n        var _iterator = _createForOfIteratorHelper(_this.aliases),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n\n            if (item.field === row.type) {\n              row.type = item.alias;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n      return rows;\n    }\n  }\n};",{"version":3,"sources":["BarMultid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAAA,OAAA,QAAA,gBAAA;AACA,SAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,MAAA,EAAA,CAAA,gBAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CACA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,iBAAA,EAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,EAAA;AAAA,kBAAA;AAAA,SADA,EAEA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,iBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA,IAAA;AAAA,kBAAA;AAAA,SAFA,CAAA;AAAA;AAFA,KALA;AAYA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AAAA;AAFA,KAZA;AAgBA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KAjBA;AAqBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AArBA,GAHA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,WAAA,EAAA,IAAA;AAFA,OAAA;AADA,KAAA;AAMA,GApCA;AAqCA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,UAAA,EAAA,GAAA,IAAA,OAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,KAAA,MAFA;AAGA,QAAA,GAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAAA,EAFA,CASA;;AACA,UAAA,IAAA,GAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA,CAAA,CAAA,KAAA,QAAA,EAAA;AACA,UAAA,GAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA,OALA,CAAA,CAVA,CAgBA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AAAA,mDACA,KAAA,CAAA,OADA;AAAA;;AAAA;AACA,8DAAA;AAAA,gBAAA,IAAA;;AACA,gBAAA,IAAA,CAAA,KAAA,KAAA,GAAA,CAAA,IAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAOA,OAPA;AAQA,aAAA,IAAA;AACA;AA3BA;AArCA,CAAA","sourcesContent":["<template>\r\n  <div :style=\"{ padding: '0 0 32px 32px' }\">\r\n    <h4 :style=\"{ marginBottom: '20px' }\">{{ title }}</h4>\r\n    <v-chart :data=\"data\" :height=\"height\" :force-fit=\"true\" :onClick=\"handleClick\">\r\n      <v-tooltip/>\r\n      <v-axis/>\r\n      <v-legend/>\r\n      <v-bar position=\"x*y\" color=\"type\" :adjust=\"adjust\"/>\r\n    </v-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { DataSet } from '@antv/data-set'\r\n  import { ChartEventMixins } from './mixins/ChartMixins'\r\n\r\n  export default {\r\n    name: 'BarMultid',\r\n    mixins: [ChartEventMixins],\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      dataSource: {\r\n        type: Array,\r\n        default: () => [\r\n          { type: 'Jeecg', 'Jan.': 18.9, 'Feb.': 28.8, 'Mar.': 39.3, 'Apr.': 81.4, 'May': 47, 'Jun.': 20.3, 'Jul.': 24, 'Aug.': 35.6 },\r\n          { type: 'Jeebt', 'Jan.': 12.4, 'Feb.': 23.2, 'Mar.': 34.5, 'Apr.': 99.7, 'May': 52.6, 'Jun.': 35.5, 'Jul.': 37.4, 'Aug.': 42.4 }\r\n        ]\r\n      },\r\n      fields: {\r\n        type: Array,\r\n        default: () => ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.']\r\n      },\r\n      // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\r\n      aliases: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      height: {\r\n        type: Number,\r\n        default: 254\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        adjust: [{\r\n          type: 'dodge',\r\n          marginRatio: 1 / 32\r\n        }]\r\n      }\r\n    },\r\n    computed: {\r\n      data() {\r\n        const dv = new DataSet.View().source(this.dataSource)\r\n        dv.transform({\r\n          type: 'fold',\r\n          fields: this.fields,\r\n          key: 'x',\r\n          value: 'y'\r\n        })\r\n\r\n        // bar 使用不了 - 和 / 所以替换下\r\n        let rows = dv.rows.map(row => {\r\n          if (typeof row.x === 'string') {\r\n            row.x = row.x.replace(/[-/]/g, '_')\r\n          }\r\n          return row\r\n        })\r\n        // 替换别名\r\n        rows.forEach(row => {\r\n          for (let item of this.aliases) {\r\n            if (item.field === row.type) {\r\n              row.type = item.alias\r\n              break\r\n            }\r\n          }\r\n        })\r\n        return rows\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/chart"}]}