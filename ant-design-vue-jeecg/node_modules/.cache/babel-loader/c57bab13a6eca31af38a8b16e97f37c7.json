{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizComponentModal.vue","mtime":1618453704903},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1605147255423},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport { cloneObject, pushIfNotExist } from '@/utils/util';\nexport default {\n  name: 'JSelectBizComponentModal',\n  mixins: [JeecgListMixin],\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    valueKey: {\n      type: String,\n      required: true\n    },\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    width: {\n      type: Number,\n      default: 900\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    listUrl: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    // 根据 value 获取显示文本的地址，例如存的是 username，可以通过该地址获取到 realname\n    valueUrl: {\n      type: String,\n      default: ''\n    },\n    displayKey: {\n      type: String,\n      default: null\n    },\n    columns: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 查询条件Code\n    queryParamCode: {\n      type: String,\n      default: null\n    },\n    // 查询条件文字\n    queryParamText: {\n      type: String,\n      default: null\n    },\n    rowKey: {\n      type: String,\n      default: 'id'\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: [],\n      // 表头\n      innerColumns: this.columns,\n      // 已选择列表\n      selectedTable: {\n        pagination: false,\n        scroll: {\n          y: 240\n        },\n        columns: [_objectSpread(_objectSpread({}, this.columns[0]), {}, {\n          width: this.columns[0].widthRight || this.columns[0].width\n        }), {\n          title: '操作',\n          dataIndex: 'action',\n          align: 'center',\n          width: 60,\n          scopedSlots: {\n            customRender: 'action'\n          }\n        }],\n        dataSource: []\n      },\n      url: {\n        list: this.listUrl\n      },\n\n      /* 分页参数 */\n      ipagination: {\n        current: 1,\n        pageSize: 5,\n        pageSizeOptions: ['5', '10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      options: [],\n      dataSourceMap: {}\n    };\n  },\n  watch: {\n    value: {\n      deep: true,\n      immediate: true,\n      handler: function handler(val) {\n        this.innerValue = cloneObject(val);\n        this.selectedRowKeys = [];\n        this.valueWatchHandler(val);\n        this.queryOptionsByValue(val);\n      }\n    },\n    dataSource: {\n      deep: true,\n      handler: function handler(val) {\n        this.emitOptions(val);\n        this.valueWatchHandler(this.innerValue);\n      }\n    },\n    selectedRowKeys: {\n      immediate: true,\n      deep: true,\n      handler: function handler(val) {\n        var _this = this;\n\n        this.selectedTable.dataSource = val.map(function (key) {\n          var _iterator = _createForOfIteratorHelper(_this.dataSource),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var data = _step.value;\n\n              if (data[_this.rowKey] === key) {\n                pushIfNotExist(_this.innerValue, data[_this.valueKey]);\n                return data;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(_this.selectedTable.dataSource),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _data = _step2.value;\n\n              if (_data[_this.rowKey] === key) {\n                pushIfNotExist(_this.innerValue, _data[_this.valueKey]);\n                return _data;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          console.warn('未找到选择的行信息，key：' + key);\n          return {};\n        });\n      }\n    }\n  },\n  methods: {\n    /** 关闭弹窗 */\n    close: function close() {\n      this.$emit('update:visible', false);\n    },\n    valueWatchHandler: function valueWatchHandler(val) {\n      var _this2 = this;\n\n      val.forEach(function (item) {\n        _this2.dataSource.concat(_this2.selectedTable.dataSource).forEach(function (data) {\n          if (data[_this2.valueKey] === item) {\n            pushIfNotExist(_this2.selectedRowKeys, data[_this2.rowKey]);\n          }\n        });\n      });\n    },\n    queryOptionsByValue: function queryOptionsByValue(value) {\n      var _getAction,\n          _this3 = this;\n\n      if (!value || value.length === 0) {\n        return;\n      } // 判断options是否存在value，如果已存在数据就不再请求后台了\n\n\n      var notExist = false;\n\n      var _iterator3 = _createForOfIteratorHelper(value),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var val = _step3.value;\n          var find = false;\n\n          var _iterator4 = _createForOfIteratorHelper(this.options),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var option = _step4.value;\n\n              if (val === option.value) {\n                find = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          if (!find) {\n            notExist = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (!notExist) return;\n      getAction(this.valueUrl || this.listUrl, (_getAction = {}, _defineProperty(_getAction, this.valueKey, value.join(',') + ','), _defineProperty(_getAction, \"pageNo\", 1), _defineProperty(_getAction, \"pageSize\", value.length), _getAction)).then(function (res) {\n        if (res.success) {\n          var dataSource = res.result;\n\n          if (!(dataSource instanceof Array)) {\n            dataSource = res.result.records;\n          }\n\n          _this3.emitOptions(dataSource, function (data) {\n            pushIfNotExist(_this3.innerValue, data[_this3.valueKey]);\n            pushIfNotExist(_this3.selectedRowKeys, data[_this3.rowKey]);\n            pushIfNotExist(_this3.selectedTable.dataSource, data, _this3.rowKey);\n          });\n        }\n      });\n    },\n    emitOptions: function emitOptions(dataSource, callback) {\n      var _this4 = this;\n\n      dataSource.forEach(function (data) {\n        var key = data[_this4.valueKey];\n        _this4.dataSourceMap[key] = data;\n        pushIfNotExist(_this4.options, {\n          label: data[_this4.displayKey || _this4.valueKey],\n          value: key\n        }, 'value');\n        typeof callback === 'function' ? callback(data) : '';\n      });\n      this.$emit('options', this.options, this.dataSourceMap);\n    },\n\n    /** 完成选择 */\n    handleOk: function handleOk() {\n      var _this5 = this;\n\n      var value = this.selectedTable.dataSource.map(function (data) {\n        return data[_this5.valueKey];\n      });\n      this.$emit('input', value);\n      this.close();\n    },\n\n    /** 删除已选择的 */\n    handleDeleteSelected: function handleDeleteSelected(record, index) {\n      this.selectedRowKeys.splice(this.selectedRowKeys.indexOf(record[this.rowKey]), 1);\n      this.selectedTable.dataSource.splice(index, 1);\n    },\n    customRowFn: function customRowFn(record) {\n      var _this6 = this;\n\n      return {\n        on: {\n          click: function click() {\n            var key = record[_this6.rowKey];\n\n            if (!_this6.multiple) {\n              _this6.selectedRowKeys = [key];\n              _this6.selectedTable.dataSource = [record];\n            } else {\n              var index = _this6.selectedRowKeys.indexOf(key);\n\n              if (index === -1) {\n                _this6.selectedRowKeys.push(key);\n\n                _this6.selectedTable.dataSource.push(record);\n              } else {\n                _this6.handleDeleteSelected(record, index);\n              }\n            }\n          }\n        }\n      };\n    }\n  }\n};",null]}