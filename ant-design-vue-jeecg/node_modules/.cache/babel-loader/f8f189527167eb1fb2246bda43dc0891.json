{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue","mtime":1618453705007},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"E:/gitData/wangfuj/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryTreeListForDeptRole, queryDeptRolePermission, saveDeptRolePermission } from '@/api/api';\nimport RoleDataruleModal from \"./RoleDataruleModal.vue\";\nimport DeptRoleDataruleModal from \"./DeptRoleDataruleModal\";\nexport default {\n  name: \"DeptRoleAuthModal\",\n  components: {\n    DeptRoleDataruleModal: DeptRoleDataruleModal,\n    RoleDataruleModal: RoleDataruleModal\n  },\n  data: function data() {\n    return {\n      departId: \"\",\n      roleId: \"\",\n      treeData: [],\n      defaultCheckedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      expandedKeysss: [],\n      allTreeKeys: [],\n      autoExpandParent: true,\n      checkStrictly: false,\n      title: \"部门角色权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys: []\n    };\n  },\n  methods: {\n    onTreeNodeSelect: function onTreeNodeSelect(id) {\n      if (id && id.length > 0) {\n        this.selectedKeys = id;\n      }\n\n      this.$refs.datarule.show(this.selectedKeys[0], this.departId, this.roleId);\n    },\n    onCheck: function onCheck(checkedKeys, _ref) {\n      var halfCheckedKeys = _ref.halfCheckedKeys;\n      // 保存选中的和半选中的，后面保存的时候合并提交\n      this.checkedKeys = checkedKeys;\n      this.halfCheckedKeys = halfCheckedKeys;\n    },\n    show: function show(roleId, departId) {\n      this.departId = departId;\n      this.roleId = roleId;\n      this.visible = true;\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    expandAll: function expandAll() {\n      this.expandedKeysss = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.expandedKeysss = [];\n    },\n    checkALL: function checkALL() {\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.checkedKeys = [];\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit(exit) {\n      var _this = this;\n\n      var that = this;\n      var checkedKeys = [].concat(_toConsumableArray(that.checkedKeys), _toConsumableArray(that.halfCheckedKeys));\n      var permissionIds = checkedKeys.join(\",\");\n      var params = {\n        roleId: that.roleId,\n        permissionIds: permissionIds,\n        lastpermissionIds: that.defaultCheckedKeys.join(\",\")\n      };\n      that.loading = true;\n      console.log(\"请求参数：\", params);\n      saveDeptRolePermission(params).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        } else {\n          that.$message.error(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        }\n\n        _this.loadData();\n      });\n    },\n    convertTreeListToKeyLeafPairs: function convertTreeListToKeyLeafPairs(treeList) {\n      var keyLeafPair = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      var _iterator = _createForOfIteratorHelper(treeList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _step.value,\n              key = _step$value.key,\n              isLeaf = _step$value.isLeaf,\n              children = _step$value.children;\n          keyLeafPair.push({\n            key: key,\n            isLeaf: isLeaf\n          });\n\n          if (children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return keyLeafPair;\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      queryTreeListForDeptRole({\n        departId: this.departId\n      }).then(function (res) {\n        _this2.treeData = res.result.treeList;\n        _this2.allTreeKeys = res.result.ids;\n\n        var keyLeafPairs = _this2.convertTreeListToKeyLeafPairs(_this2.treeData);\n\n        queryDeptRolePermission({\n          roleId: _this2.roleId\n        }).then(function (res) {\n          // 过滤出 leaf node 即可，即选中的\n          // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n          // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n          var checkedKeys = _toConsumableArray(res.result).filter(function (key) {\n            var keyLeafPair = keyLeafPairs.filter(function (item) {\n              return item.key === key;\n            })[0];\n            return keyLeafPair && keyLeafPair.isLeaf;\n          });\n\n          var halfCheckedKeys = _toConsumableArray(res.result).filter(function (key) {\n            var keyLeafPair = keyLeafPairs.filter(function (item) {\n              return item.key === key;\n            })[0];\n            return keyLeafPair && !keyLeafPair.isLeaf;\n          });\n\n          _this2.checkedKeys = _toConsumableArray(checkedKeys);\n          _this2.halfCheckedKeys = _toConsumableArray(halfCheckedKeys);\n          _this2.defaultCheckedKeys = [].concat(_toConsumableArray(halfCheckedKeys), _toConsumableArray(checkedKeys));\n          _this2.expandedKeysss = _this2.allTreeKeys;\n        });\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      if (this.visible) {\n        this.loadData();\n      }\n    }\n  }\n};",{"version":3,"sources":["DeptRoleAuthModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :maskClosable=\"true\"\r\n    width=650\r\n    placement=\"right\"\r\n    :closable=\"true\"\r\n    @close=\"close\"\r\n    :visible=\"visible\"\r\n    style=\"height: calc(100% - 55px);overflow: auto;padding-bottom: 53px;\">\r\n\r\n    <a-form>\r\n      <a-form-item label='所拥有的部门权限'>\r\n\r\n        <a-tree\r\n          v-if=\"treeData.length>0\"\r\n          checkable\r\n          @check=\"onCheck\"\r\n          :checkedKeys=\"checkedKeys\"\r\n          :treeData=\"treeData\"\r\n          @expand=\"onExpand\"\r\n          @select=\"onTreeNodeSelect\"\r\n          :selectedKeys=\"selectedKeys\"\r\n          :expandedKeys=\"expandedKeysss\"\r\n          :checkStrictly=\"checkStrictly\">\r\n          <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\r\n            {{ slotTitle }}<a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\r\n          </span>\r\n        </a-tree>\r\n        <div v-else><h3>无可配置部门权限!</h3></div>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n    <div class=\"drawer-bootom-button\">\r\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\r\n        <a-menu slot=\"overlay\">\r\n          <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\r\n          <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\r\n          <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\r\n          <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\r\n        </a-menu>\r\n        <a-button>\r\n          树操作 <a-icon type=\"up\" />\r\n        </a-button>\r\n      </a-dropdown>\r\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\r\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\r\n      </a-popconfirm>\r\n      <a-button @click=\"handleSubmit(false)\" type=\"primary\" :loading=\"loading\" ghost style=\"margin-right: 0.8rem\">仅保存</a-button>\r\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\" :loading=\"loading\">保存并关闭</a-button>\r\n    </div>\r\n    <dept-role-datarule-modal ref=\"datarule\"></dept-role-datarule-modal>\r\n  </a-drawer>\r\n\r\n</template>\r\n<script>\r\n  import {queryTreeListForDeptRole,queryDeptRolePermission,saveDeptRolePermission} from '@/api/api'\r\n  import RoleDataruleModal from './RoleDataruleModal.vue'\r\n  import DeptRoleDataruleModal from './DeptRoleDataruleModal'\r\n\r\n  export default {\r\n    name: \"DeptRoleAuthModal\",\r\n    components:{\r\n      DeptRoleDataruleModal,\r\n      RoleDataruleModal\r\n    },\r\n    data(){\r\n      return {\r\n        departId:\"\",\r\n        roleId:\"\",\r\n        treeData: [],\r\n        defaultCheckedKeys:[],\r\n        checkedKeys:[],\r\n        halfCheckedKeys:[],\r\n        expandedKeysss:[],\r\n        allTreeKeys:[],\r\n        autoExpandParent: true,\r\n        checkStrictly: false,\r\n        title:\"部门角色权限配置\",\r\n        visible: false,\r\n        loading: false,\r\n        selectedKeys:[]\r\n      }\r\n    },\r\n    methods: {\r\n      onTreeNodeSelect(id){\r\n        if(id && id.length>0){\r\n          this.selectedKeys = id\r\n        }\r\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId,this.roleId)\r\n      },\r\n      onCheck (checkedKeys, { halfCheckedKeys }) {\r\n        // 保存选中的和半选中的，后面保存的时候合并提交\r\n        this.checkedKeys = checkedKeys\r\n        this.halfCheckedKeys = halfCheckedKeys\r\n      },\r\n      show(roleId,departId){\r\n        this.departId = departId\r\n        this.roleId=roleId\r\n        this.visible = true;\r\n      },\r\n      close () {\r\n        this.reset()\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      onExpand(expandedKeys){\r\n        this.expandedKeysss = expandedKeys;\r\n        this.autoExpandParent = false\r\n      },\r\n      reset () {\r\n        this.expandedKeysss = []\r\n        this.checkedKeys = []\r\n        this.defaultCheckedKeys = []\r\n        this.loading = false\r\n      },\r\n      expandAll () {\r\n        this.expandedKeysss = this.allTreeKeys\r\n      },\r\n      closeAll () {\r\n        this.expandedKeysss = []\r\n      },\r\n      checkALL () {\r\n        this.checkedKeys = this.allTreeKeys\r\n      },\r\n      cancelCheckALL () {\r\n        this.checkedKeys = []\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      handleSubmit(exit) {\r\n        let that = this;\r\n        let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\r\n        const permissionIds = checkedKeys.join(\",\")\r\n        let params =  {\r\n          roleId:that.roleId,\r\n          permissionIds,\r\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\r\n        };\r\n        that.loading = true;\r\n        console.log(\"请求参数：\",params);\r\n        saveDeptRolePermission(params).then((res)=>{\r\n          if(res.success){\r\n            that.$message.success(res.message);\r\n            that.loading = false;\r\n            if (exit) {\r\n              that.close()\r\n            }\r\n          }else {\r\n            that.$message.error(res.message);\r\n            that.loading = false;\r\n            if (exit) {\r\n              that.close()\r\n            }\r\n          }\r\n          this.loadData();\r\n        })\r\n      },\r\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\r\n        for(const {key, isLeaf, children} of treeList) {\r\n          keyLeafPair.push({key, isLeaf})\r\n          if(children && children.length > 0) {\r\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\r\n          }\r\n        }\r\n        return keyLeafPair;\r\n      },\r\n      loadData(){\r\n        queryTreeListForDeptRole({departId:this.departId}).then((res) => {\r\n          this.treeData = res.result.treeList\r\n          this.allTreeKeys = res.result.ids\r\n          const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\r\n          queryDeptRolePermission({roleId:this.roleId}).then((res)=>{\r\n            // 过滤出 leaf node 即可，即选中的\r\n            // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\r\n            // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\r\n            const checkedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && keyLeafPair.isLeaf\r\n            })\r\n            const halfCheckedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && !keyLeafPair.isLeaf\r\n            })\r\n            this.checkedKeys = [...checkedKeys];\r\n            this.halfCheckedKeys = [...halfCheckedKeys]\r\n            this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\r\n            this.expandedKeysss = this.allTreeKeys;\r\n          })\r\n        })\r\n      }\r\n    },\r\n    watch: {\r\n      visible () {\r\n        if (this.visible ) {\r\n          this.loadData();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .drawer-bootom-button {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    border-top: 1px solid #e8e8e8;\r\n    padding: 10px 16px;\r\n    text-align: right;\r\n    left: 0;\r\n    background: #fff;\r\n    border-radius: 0 0 2px 2px;\r\n  }\r\n\r\n</style>"],"sourceRoot":"src/views/system/modules"}]}