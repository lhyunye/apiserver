{"remainingRequest":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue","mtime":1618453704886},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1605147255423},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1618457261991},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1605147250913},{"path":"E:\\gitData\\wangfuj\\jeecg-boot\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1618457253212}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DataSet } from '@antv/data-set';\nimport { ChartEventMixins } from \"./mixins/ChartMixins\";\nexport default {\n  name: 'BarMultid',\n  mixins: [ChartEventMixins],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'Jeecg',\n          'Jan.': 18.9,\n          'Feb.': 28.8,\n          'Mar.': 39.3,\n          'Apr.': 81.4,\n          'May': 47,\n          'Jun.': 20.3,\n          'Jul.': 24,\n          'Aug.': 35.6\n        }, {\n          type: 'Jeebt',\n          'Jan.': 12.4,\n          'Feb.': 23.2,\n          'Mar.': 34.5,\n          'Apr.': 99.7,\n          'May': 52.6,\n          'Jun.': 35.5,\n          'Jul.': 37.4,\n          'Aug.': 42.4\n        }];\n      }\n    },\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.'];\n      }\n    },\n    // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n    aliases: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 254\n    }\n  },\n  data: function data() {\n    return {\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }]\n    };\n  },\n  computed: {\n    data: function data() {\n      var _this = this;\n\n      var dv = new DataSet.View().source(this.dataSource);\n      dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'x',\n        value: 'y'\n      }); // bar 使用不了 - 和 / 所以替换下\n\n      var rows = dv.rows.map(function (row) {\n        if (typeof row.x === 'string') {\n          row.x = row.x.replace(/[-/]/g, '_');\n        }\n\n        return row;\n      }); // 替换别名\n\n      rows.forEach(function (row) {\n        var _iterator = _createForOfIteratorHelper(_this.aliases),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n\n            if (item.field === row.type) {\n              row.type = item.alias;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n      return rows;\n    }\n  }\n};",null]}